{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Compilador de Microsoft (R) Visual C#",
        "version": "4.10.0.0",
        "fileVersion": "4.10.0-3.24324.8 (04fb3916)",
        "semanticVersion": "4.10.0",
        "language": "es-MX"
      },
      "results": [
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "El método asincrónico carece de operadores \"await\" y se ejecutará de forma sincrónica. Puede usar el operador 'await' para esperar llamadas API que no sean de bloqueo o 'await Task.Run(...)' para hacer tareas enlazadas a la CPU en un subproceso en segundo plano.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/MainWindow.xaml.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 28,
                  "endLine": 26,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS4014",
          "level": "warning",
          "message": "Como esta llamada no es 'awaited', la ejecución del método actual continuará antes de que se complete la llamada. Puede aplicar el operador 'await' al resultado de la llamada.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/LaderboardView.xaml.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 13,
                  "endLine": 19,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "El método asincrónico carece de operadores \"await\" y se ejecutará de forma sincrónica. Puede usar el operador 'await' para esperar llamadas API que no sean de bloqueo o 'await Task.Run(...)' para hacer tareas enlazadas a la CPU en un subproceso en segundo plano.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/MenuView.xaml.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 28,
                  "endLine": 31,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "El método asincrónico carece de operadores \"await\" y se ejecutará de forma sincrónica. Puede usar el operador 'await' para esperar llamadas API que no sean de bloqueo o 'await Task.Run(...)' para hacer tareas enlazadas a la CPU en un subproceso en segundo plano.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/MenuView.xaml.cs",
                "region": {
                  "startLine": 245,
                  "startColumn": 28,
                  "endLine": 245,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS1998",
          "level": "warning",
          "message": "El método asincrónico carece de operadores \"await\" y se ejecutará de forma sincrónica. Puede usar el operador 'await' para esperar llamadas API que no sean de bloqueo o 'await Task.Run(...)' para hacer tareas enlazadas a la CPU en un subproceso en segundo plano.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/GameMatchView.xaml.cs",
                "region": {
                  "startLine": 367,
                  "startColumn": 28,
                  "endLine": 367,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS0169",
          "level": "warning",
          "message": "El campo 'SelectLobbyView.lobbyManager' nunca se usa",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/SelectLobbyView.xaml.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 36,
                  "endLine": 15,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 3
          }
        },
        {
          "ruleId": "S1118",
          "level": "warning",
          "message": "Add a 'protected' constructor or the 'static' keyword to the class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Logic/ConstantsManager.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 20,
                  "endLine": 9,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/CodeGameMatchView.xaml.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 17,
                  "endLine": 27,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/GameMatchView.xaml.cs",
                "region": {
                  "startLine": 370,
                  "startColumn": 15,
                  "endLine": 370,
                  "endColumn": 103
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3903",
          "level": "warning",
          "message": "Move 'DialogManager' into a named namespace.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Logic/DialogManager.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2245",
          "level": "warning",
          "message": "Make sure that using this pseudorandom number generator is safe here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Logic/GuestProfile.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 49,
                  "endLine": 5,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1118",
          "level": "warning",
          "message": "Add a 'protected' constructor or the 'static' keyword to the class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Logic/Hasher.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 20,
                  "endLine": 7,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4487",
          "level": "warning",
          "message": "Remove this unread private field 'lobbyManager' or refactor the code to use its value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/MainWindow.xaml.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 36,
                  "endLine": 13,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4487",
          "level": "warning",
          "message": "Remove this unread private field 'chatManager' or refactor the code to use its value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/MainWindow.xaml.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 35,
                  "endLine": 14,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4487",
          "level": "warning",
          "message": "Remove this unread private field 'lobbyBrowser' or refactor the code to use its value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/MenuView.xaml.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 36,
                  "endLine": 20,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1192",
          "level": "warning",
          "message": "Define a constant instead of using this literal 'PlayerOne' 5 times.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/LobbyView.xaml.cs",
                "region": {
                  "startLine": 137,
                  "startColumn": 63,
                  "endLine": 137,
                  "endColumn": 74
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/LobbyView.xaml.cs",
                "region": {
                  "startLine": 137,
                  "startColumn": 92,
                  "endLine": 137,
                  "endColumn": 103
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/LobbyView.xaml.cs",
                "region": {
                  "startLine": 145,
                  "startColumn": 63,
                  "endLine": 145,
                  "endColumn": 74
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/LobbyView.xaml.cs",
                "region": {
                  "startLine": 145,
                  "startColumn": 92,
                  "endLine": 145,
                  "endColumn": 103
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/LobbyView.xaml.cs",
                "region": {
                  "startLine": 156,
                  "startColumn": 46,
                  "endLine": 156,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": null,
              "1": null,
              "2": null,
              "3": null
            }
          }
        },
        {
          "ruleId": "S1192",
          "level": "warning",
          "message": "Define a constant instead of using this literal 'Esperando jugador...' 4 times.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/LobbyView.xaml.cs",
                "region": {
                  "startLine": 137,
                  "startColumn": 116,
                  "endLine": 137,
                  "endColumn": 138
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/LobbyView.xaml.cs",
                "region": {
                  "startLine": 138,
                  "startColumn": 116,
                  "endLine": 138,
                  "endColumn": 138
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/LobbyView.xaml.cs",
                "region": {
                  "startLine": 144,
                  "startColumn": 116,
                  "endLine": 144,
                  "endColumn": 138
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/LobbyView.xaml.cs",
                "region": {
                  "startLine": 145,
                  "startColumn": 116,
                  "endLine": 145,
                  "endColumn": 138
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": null,
              "1": null,
              "2": null
            }
          }
        },
        {
          "ruleId": "S1192",
          "level": "warning",
          "message": "Define a constant instead of using this literal 'PlayerTwo' 5 times.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/LobbyView.xaml.cs",
                "region": {
                  "startLine": 138,
                  "startColumn": 63,
                  "endLine": 138,
                  "endColumn": 74
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/LobbyView.xaml.cs",
                "region": {
                  "startLine": 138,
                  "startColumn": 92,
                  "endLine": 138,
                  "endColumn": 103
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/LobbyView.xaml.cs",
                "region": {
                  "startLine": 144,
                  "startColumn": 63,
                  "endLine": 144,
                  "endColumn": 74
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/LobbyView.xaml.cs",
                "region": {
                  "startLine": 144,
                  "startColumn": 92,
                  "endLine": 144,
                  "endColumn": 103
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/LobbyView.xaml.cs",
                "region": {
                  "startLine": 147,
                  "startColumn": 68,
                  "endLine": 147,
                  "endColumn": 79
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": null,
              "1": null,
              "2": null,
              "3": null
            }
          }
        },
        {
          "ruleId": "S1144",
          "level": "warning",
          "message": "Remove the unused private field 'lobbyManager'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/SelectLobbyView.xaml.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 9,
                  "endLine": 15,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3241",
          "level": "warning",
          "message": "Change return type to 'void'; not a single caller uses the returned value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/SelectLobbyView.xaml.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 17,
                  "endLine": 23,
                  "endColumn": 21
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1144",
          "level": "warning",
          "message": "Remove the unused private method 'UpdatePasswordVisibilityIcon'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/RegisterView.xaml.cs",
                "region": {
                  "startLine": 229,
                  "startColumn": 22,
                  "endLine": 229,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6444",
          "level": "warning",
          "message": "Pass a timeout to limit the execution time.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Logic/Validador.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 38,
                  "endLine": 31,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6444",
          "level": "warning",
          "message": "Pass a timeout to limit the execution time.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Logic/Validador.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 38,
                  "endLine": 37,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6444",
          "level": "warning",
          "message": "Pass a timeout to limit the execution time.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Logic/Validador.cs",
                "region": {
                  "startLine": 60,
                  "startColumn": 34,
                  "endLine": 60,
                  "endColumn": 77
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6444",
          "level": "warning",
          "message": "Pass a timeout to limit the execution time.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Logic/Validador.cs",
                "region": {
                  "startLine": 66,
                  "startColumn": 35,
                  "endLine": 66,
                  "endColumn": 74
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'codeMatch'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/CodeGameMatchView.xaml.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 24,
                  "endLine": 23,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Logic/Validador.cs",
                "region": {
                  "startLine": 45,
                  "startColumn": 17,
                  "endLine": 45,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/TripasDeGatoCliente/Logic/Validador.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 13,
                  "endLine": 44,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": null
            }
          }
        },
        {
          "ruleId": "S6444",
          "level": "warning",
          "message": "Pass a timeout to limit the execution time.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Logic/Validador.cs",
                "region": {
                  "startLine": 74,
                  "startColumn": 29,
                  "endLine": 74,
                  "endColumn": 77
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'mailAddress'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Logic/Validador.cs",
                "region": {
                  "startLine": 47,
                  "startColumn": 29,
                  "endLine": 47,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1186",
          "level": "warning",
          "message": "Add a nested comment explaining why this method is empty, throw a 'NotSupportedException' or complete the implementation.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/MainWindow.xaml.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 22,
                  "endLine": 70,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2325",
          "level": "warning",
          "message": "Make 'CreateInstance' a static method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Logic/UserProfileSnglenton.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 21,
                  "endLine": 17,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2325",
          "level": "warning",
          "message": "Make 'ResetInstance' a static method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Logic/UserProfileSnglenton.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 21,
                  "endLine": 32,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2325",
          "level": "warning",
          "message": "Make 'CreateGuestInstance' a static method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Logic/UserProfileSnglenton.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 21,
                  "endLine": 24,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2325",
          "level": "warning",
          "message": "Make 'GetLogger' a static method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Logic/LoggerManager.cs",
                "region": {
                  "startLine": 16,
                  "startColumn": 21,
                  "endLine": 16,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2325",
          "level": "warning",
          "message": "Make 'ResetSingleton' a static method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Logic/GuestProfileSinglenton.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 21,
                  "endLine": 20,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2325",
          "level": "warning",
          "message": "Make 'CreateInstance' a static method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Logic/GuestProfileSinglenton.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 21,
                  "endLine": 12,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2325",
          "level": "warning",
          "message": "Make 'ObtainSingletonData' a static method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/LoginView.xaml.cs",
                "region": {
                  "startLine": 113,
                  "startColumn": 22,
                  "endLine": 113,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2325",
          "level": "warning",
          "message": "Make 'HighlightField' a static method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/LoginView.xaml.cs",
                "region": {
                  "startLine": 145,
                  "startColumn": 22,
                  "endLine": 145,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2325",
          "level": "warning",
          "message": "Make 'ResetField' a static method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/LoginView.xaml.cs",
                "region": {
                  "startLine": 166,
                  "startColumn": 22,
                  "endLine": 166,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3168",
          "level": "warning",
          "message": "Return 'Task' instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/GameMatchView.xaml.cs",
                "region": {
                  "startLine": 62,
                  "startColumn": 23,
                  "endLine": 62,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3168",
          "level": "warning",
          "message": "Return 'Task' instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/MenuView.xaml.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 23,
                  "endLine": 31,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1854",
          "level": "warning",
          "message": "Remove this useless assignment to local variable 'duration'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/CreateLobbyView.xaml.cs",
                "region": {
                  "startLine": 68,
                  "startColumn": 22,
                  "endLine": 68,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3168",
          "level": "warning",
          "message": "Return 'Task' instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/LobbyView.xaml.cs",
                "region": {
                  "startLine": 50,
                  "startColumn": 23,
                  "endLine": 50,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6966",
          "level": "warning",
          "message": "Await RegisterPlayerCallbackAsync instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/GameMatchView.xaml.cs",
                "region": {
                  "startLine": 64,
                  "startColumn": 34,
                  "endLine": 64,
                  "endColumn": 117
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1117",
          "level": "warning",
          "message": "Rename 'statusManager' which hides the field with the same name.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/MenuView.xaml.cs",
                "region": {
                  "startLine": 54,
                  "startColumn": 32,
                  "endLine": 54,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3168",
          "level": "warning",
          "message": "Return 'Task' instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/ProfileView.xaml.cs",
                "region": {
                  "startLine": 73,
                  "startColumn": 23,
                  "endLine": 73,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this unused method parameter 'selectedLanguage'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/ProfileView.xaml.cs",
                "region": {
                  "startLine": 73,
                  "startColumn": 57,
                  "endLine": 73,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "True"
            }
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'email'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/LoginView.xaml.cs",
                "region": {
                  "startLine": 290,
                  "startColumn": 20,
                  "endLine": 290,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2325",
          "level": "warning",
          "message": "Make 'ValidateFriendName' a static method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/MenuView.xaml.cs",
                "region": {
                  "startLine": 137,
                  "startColumn": 22,
                  "endLine": 137,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2325",
          "level": "warning",
          "message": "Make 'IsValidPassword' a static method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/LoginView.xaml.cs",
                "region": {
                  "startLine": 342,
                  "startColumn": 22,
                  "endLine": 342,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/GameMatchView.xaml.cs",
                "region": {
                  "startLine": 176,
                  "startColumn": 17,
                  "endLine": 176,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/GameMatchView.xaml.cs",
                "region": {
                  "startLine": 175,
                  "startColumn": 13,
                  "endLine": 175,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": null
            }
          }
        },
        {
          "ruleId": "S3168",
          "level": "warning",
          "message": "Return 'Task' instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/LobbyView.xaml.cs",
                "region": {
                  "startLine": 134,
                  "startColumn": 22,
                  "endLine": 134,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2325",
          "level": "warning",
          "message": "Make 'HighlightField' a static method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/RegisterView.xaml.cs",
                "region": {
                  "startLine": 191,
                  "startColumn": 22,
                  "endLine": 191,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1244",
          "level": "warning",
          "message": "Do not check floating point equality with exact values, use a range instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/GameMatchView.xaml.cs",
                "region": {
                  "startLine": 214,
                  "startColumn": 31,
                  "endLine": 214,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2325",
          "level": "warning",
          "message": "Make 'IsUserHost' a static method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/LobbyView.xaml.cs",
                "region": {
                  "startLine": 155,
                  "startColumn": 22,
                  "endLine": 155,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2325",
          "level": "warning",
          "message": "Make 'DistanceFromPointToSegment' a static method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/GameMatchView.xaml.cs",
                "region": {
                  "startLine": 204,
                  "startColumn": 24,
                  "endLine": 204,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loop should be simplified by calling Select(polyline => polyline.Points))",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/GameMatchView.xaml.cs",
                "region": {
                  "startLine": 192,
                  "startColumn": 38,
                  "endLine": 192,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6966",
          "level": "warning",
          "message": "Await GetPicPathAsync instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/LobbyView.xaml.cs",
                "region": {
                  "startLine": 147,
                  "startColumn": 31,
                  "endLine": 147,
                  "endColumn": 90
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2325",
          "level": "warning",
          "message": "Make 'ResetField' a static method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/RegisterView.xaml.cs",
                "region": {
                  "startLine": 238,
                  "startColumn": 22,
                  "endLine": 238,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 16 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/GameMatchView.xaml.cs",
                "region": {
                  "startLine": 247,
                  "startColumn": 21,
                  "endLine": 247,
                  "endColumn": 37
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/GameMatchView.xaml.cs",
                "region": {
                  "startLine": 255,
                  "startColumn": 21,
                  "endLine": 255,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/GameMatchView.xaml.cs",
                "region": {
                  "startLine": 257,
                  "startColumn": 29,
                  "endLine": 257,
                  "endColumn": 30
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/GameMatchView.xaml.cs",
                "region": {
                  "startLine": 259,
                  "startColumn": 33,
                  "endLine": 259,
                  "endColumn": 34
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/GameMatchView.xaml.cs",
                "region": {
                  "startLine": 263,
                  "startColumn": 23,
                  "endLine": 263,
                  "endColumn": 27
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/GameMatchView.xaml.cs",
                "region": {
                  "startLine": 266,
                  "startColumn": 19,
                  "endLine": 266,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/GameMatchView.xaml.cs",
                "region": {
                  "startLine": 269,
                  "startColumn": 19,
                  "endLine": 269,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/GameMatchView.xaml.cs",
                "region": {
                  "startLine": 272,
                  "startColumn": 19,
                  "endLine": 272,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+2 (incl 1 for nesting)",
              "1": "+3 (incl 2 for nesting)",
              "2": "+4 (incl 3 for nesting)",
              "3": "+1",
              "4": "+2 (incl 1 for nesting)",
              "5": "+2 (incl 1 for nesting)",
              "6": "+2 (incl 1 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3358",
          "level": "warning",
          "message": "Extract this nested ternary operation into an independent statement.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/GameMatchView.xaml.cs",
                "region": {
                  "startLine": 258,
                  "startColumn": 31,
                  "endLine": 260,
                  "endColumn": 82
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6605",
          "level": "warning",
          "message": "Collection-specific \"Exists\" method should be used instead of the \"Any\" extension.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/GameMatchView.xaml.cs",
                "region": {
                  "startLine": 284,
                  "startColumn": 46,
                  "endLine": 284,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6602",
          "level": "warning",
          "message": "\"Find\" method should be used instead of the \"FirstOrDefault\" extension method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/GameMatchView.xaml.cs",
                "region": {
                  "startLine": 301,
                  "startColumn": 26,
                  "endLine": 301,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2325",
          "level": "warning",
          "message": "Make 'MatchEnded' a static method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/GameMatchView.xaml.cs",
                "region": {
                  "startLine": 330,
                  "startColumn": 21,
                  "endLine": 330,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1117",
          "level": "warning",
          "message": "Rename 'isConnected' which hides the field with the same name.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/TripasDeGatoCliente/Views/GameMatchView.xaml.cs",
                "region": {
                  "startLine": 284,
                  "startColumn": 22,
                  "endLine": 284,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CS0169": {
          "id": "CS0169",
          "shortDescription": "Nunca se usa el campo",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS0169)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS1998": {
          "id": "CS1998",
          "shortDescription": "El método asincrónico carece de operadores \"await\" y se ejecutará de forma sincrónica",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS1998)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS4014": {
          "id": "CS4014",
          "shortDescription": "Dado que no se esperaba esta llamada, la ejecución del método actual continuará antes de que se complete la llamada",
          "fullDescription": "El método actual llama a un método asincrónico que devuelve una tarea o un Task<TResult>, y no aplica el operador Await al resultado. La llamada al método asincrónico inicia una tarea asincrónica. Sin embargo, debido a que no se aplica ningún operador Await, el programa continúa sin esperar a que finalice la tarea. En la mayoría de los casos, este comportamiento no es el esperado. Generalmente, otros aspectos del método de llamada dependen de los resultados de la llamada. O bien, se espera como mínimo que el método al que se llama se complete antes de volver al método que contiene la llamada.\u000d\u000a\u000d\u000aUn problema de igual importancia es el que se genera con las excepciones que se producen en el método asincrónico al que se llama. Las excepciones que se producen en un método que devuelve una tarea o un Task<TResult> se almacenan en la tarea devuelta. Si no espera por la tarea o no realiza una comprobación explícita de excepciones, la excepción se pierde. Si espera por la tarea, su excepción se vuelve a producir.\u000d\u000a\u000d\u000aComo procedimiento recomendado, siempre debe esperar por la llamada.\u000d\u000a\u000d\u000aConsidere la posibilidad de suprimir la advertencia solo si tiene la seguridad de que no desea esperar a que la llamada asincrónica se complete y que el método al que se llama no producirá excepciones. En ese caso, puede suprimir la advertencia asignando el resultado de la tarea de la llamada a una variable.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS4014)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "S1066": {
          "id": "S1066",
          "shortDescription": "Mergeable \"if\" statements should be combined",
          "fullDescription": "Nested code - blocks of code inside blocks of code - is eventually necessary, but increases complexity. This is why keeping the code as flat as possible, by avoiding unnecessary nesting, is considered a good practice.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1066",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1117": {
          "id": "S1117",
          "shortDescription": "Local variables should not shadow class fields or properties",
          "fullDescription": "Shadowing occurs when a local variable has the same name as a variable, field, or property in an outer scope.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1117",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1118": {
          "id": "S1118",
          "shortDescription": "Utility classes should not have public constructors",
          "fullDescription": "Whenever there are portions of code that are duplicated and do not depend on the state of their container class, they can be centralized inside a \"utility class\". A utility class is a class that only has static members, hence it should not be instantiated.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1118",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1144": {
          "id": "S1144",
          "shortDescription": "Unused private types or members should be removed",
          "fullDescription": "This rule raises an issue when a private/internal type or member is never referenced in the code.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1144",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1172": {
          "id": "S1172",
          "shortDescription": "Unused method parameters should be removed",
          "fullDescription": "A typical code smell known as unused function parameters refers to parameters declared in a function but not used anywhere within the function’s body. While this might seem harmless at first glance, it can lead to confusion and potential errors in your code. Disregarding the values passed to such parameters, the function’s behavior will be the same, but the programmer’s intention won’t be clearly expressed anymore. Therefore, removing function parameters that are not being utilized is considered best practice.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1172",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1186": {
          "id": "S1186",
          "shortDescription": "Methods should not be empty",
          "fullDescription": "An empty method is generally considered bad practice and can lead to confusion, readability, and maintenance issues. Empty methods bring no functionality and are misleading to others as they might think the method implementation fulfills a specific and identified requirement.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1186",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1192": {
          "id": "S1192",
          "shortDescription": "String literals should not be duplicated",
          "fullDescription": "Duplicated string literals make the process of refactoring complex and error-prone, as any change would need to be propagated on all occurrences.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1192",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1244": {
          "id": "S1244",
          "shortDescription": "Floating point numbers should not be tested for equality",
          "fullDescription": "Floating point numbers in C# (and in most other programming languages) are not precise. They are a binary approximation of the actual value. This means that even if two floating point numbers appear to be equal, they might not be due to the tiny differences in their binary representation.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1244",
          "properties": {
            "category": "Major Bug",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S125": {
          "id": "S125",
          "shortDescription": "Sections of code should not be commented out",
          "fullDescription": "Commented-out code distracts the focus from the actual executed code. It creates a noise that increases maintenance code. And because it is never executed, it quickly becomes out of date and invalid.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-125",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1481": {
          "id": "S1481",
          "shortDescription": "Unused local variables should be removed",
          "fullDescription": "An unused local variable is a variable that has been declared but is not used anywhere in the block of code where it is defined. It is dead code, contributing to unnecessary complexity and leading to confusion when reading the code. Therefore, it should be removed from your code to maintain clarity and efficiency.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1481",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1854": {
          "id": "S1854",
          "shortDescription": "Unused assignments should be removed",
          "fullDescription": "Dead stores refer to assignments made to local variables that are subsequently never used or immediately overwritten. Such assignments are unnecessary and don’t contribute to the functionality or clarity of the code. They may even negatively impact performance. Removing them enhances code cleanliness and readability. Even if the unnecessary operations do not do any harm in terms of the program’s correctness, they are - at best - a waste of computing resources.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1854",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2245": {
          "id": "S2245",
          "shortDescription": "Using pseudorandom number generators (PRNGs) is security-sensitive",
          "fullDescription": "Using pseudorandom number generators (PRNGs) is security-sensitive. For example, it has led in the past to the following vulnerabilities:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2245",
          "properties": {
            "category": "Critical Security Hotspot",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2325": {
          "id": "S2325",
          "shortDescription": "Methods and properties that don't access instance data should be static",
          "fullDescription": "Methods and properties that don’t access instance data should be marked as static for the following reasons:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2325",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3168": {
          "id": "S3168",
          "shortDescription": "\"async\" methods should not return \"void\"",
          "fullDescription": "An async method with a void return type does not follow the task asynchronous programming (TAP) model since the return type should be Task or Task<TResult>",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3168",
          "properties": {
            "category": "Major Bug",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3241": {
          "id": "S3241",
          "shortDescription": "Methods should not return values that are never used",
          "fullDescription": "Private methods are intended for use only within their scope. If these methods return values that are not utilized by any calling functions, it indicates that the return operation is unnecessary. Removing such returns can enhance both efficiency and code clarity.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3241",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3267": {
          "id": "S3267",
          "shortDescription": "Loops should be simplified with \"LINQ\" expressions",
          "fullDescription": "When a loop is filtering, selecting or aggregating, those functions can be handled with a clearer, more concise LINQ expression instead.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3267",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3358": {
          "id": "S3358",
          "shortDescription": "Ternary operators should not be nested",
          "fullDescription": "Nested ternaries are hard to read and can make the order of operations complex to understand.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3358",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3776": {
          "id": "S3776",
          "shortDescription": "Cognitive Complexity of methods should not be too high",
          "fullDescription": "This rule raises an issue when the code cognitive complexity of a function is above a certain threshold.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3776",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3903": {
          "id": "S3903",
          "shortDescription": "Types should be defined in named namespaces",
          "fullDescription": "Types are declared in namespaces in order to prevent name collisions and as a way to organize them into the object hierarchy. Types that are defined outside any named namespace are in a global namespace that cannot be referenced in code.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3903",
          "properties": {
            "category": "Major Bug",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4487": {
          "id": "S4487",
          "shortDescription": "Unread \"private\" fields should be removed",
          "fullDescription": "Private fields which are written but never read are a case of \"dead store\". Changing the value of such a field is useless and most probably indicates an error in the code.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4487",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S6444": {
          "id": "S6444",
          "shortDescription": "Not specifying a timeout for regular expressions is security-sensitive",
          "fullDescription": "Not specifying a timeout for regular expressions can lead to a Denial-of-Service attack. Pass a timeout when using System.Text.RegularExpressions to process untrusted input because a malicious user might craft a value for which the evaluation lasts excessively long.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-6444",
          "properties": {
            "category": "Major Security Hotspot",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S6602": {
          "id": "S6602",
          "shortDescription": "\"Find\" method should be used instead of the \"FirstOrDefault\" extension",
          "fullDescription": "Both the List.Find method and IEnumerable.FirstOrDefault method can be used to find the first element that satisfies a given condition in a collection. However, List.Find can be faster than IEnumerable.FirstOrDefault for List objects. For small collections, the performance difference may be minor, but for large collections, it can make a noticeable difference. The same applies for ImmutableList and arrays too.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-6602",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S6605": {
          "id": "S6605",
          "shortDescription": "Collection-specific \"Exists\" method should be used instead of the \"Any\" extension",
          "fullDescription": "Both the List.Exists method and IEnumerable.Any method can be used to find the first element that satisfies a predicate in a collection. However, List.Exists can be faster than IEnumerable.Any for List objects, as well as requires significantly less memory. For small collections, the performance difference may be negligible, but for large collections, it can be noticeable. The same applies to ImmutableList and arrays too.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-6605",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S6966": {
          "id": "S6966",
          "shortDescription": "Awaitable method should be used",
          "fullDescription": "In an async method, any blocking operations should be avoided.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-6966",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}