//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TripasDeGatoCliente.TripasDeGatoServicio {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginUser", Namespace="http://schemas.datacontract.org/2004/07/TripasService.Contracts")]
    [System.SerializableAttribute()]
    public partial class LoginUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idLoginUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string mailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idLoginUser {
            get {
                return this.idLoginUserField;
            }
            set {
                if ((this.idLoginUserField.Equals(value) != true)) {
                    this.idLoginUserField = value;
                    this.RaisePropertyChanged("idLoginUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string mail {
            get {
                return this.mailField;
            }
            set {
                if ((object.ReferenceEquals(this.mailField, value) != true)) {
                    this.mailField = value;
                    this.RaisePropertyChanged("mail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Profile", Namespace="http://schemas.datacontract.org/2004/07/TripasService.Contracts")]
    [System.SerializableAttribute()]
    public partial class Profile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string picturePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int scoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TripasDeGatoCliente.TripasDeGatoServicio.GaneEnumsPlayerStatus statusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string userNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idProfile {
            get {
                return this.idProfileField;
            }
            set {
                if ((this.idProfileField.Equals(value) != true)) {
                    this.idProfileField = value;
                    this.RaisePropertyChanged("idProfile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string picturePath {
            get {
                return this.picturePathField;
            }
            set {
                if ((object.ReferenceEquals(this.picturePathField, value) != true)) {
                    this.picturePathField = value;
                    this.RaisePropertyChanged("picturePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int score {
            get {
                return this.scoreField;
            }
            set {
                if ((this.scoreField.Equals(value) != true)) {
                    this.scoreField = value;
                    this.RaisePropertyChanged("score");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TripasDeGatoCliente.TripasDeGatoServicio.GaneEnumsPlayerStatus status {
            get {
                return this.statusField;
            }
            set {
                if ((this.statusField.Equals(value) != true)) {
                    this.statusField = value;
                    this.RaisePropertyChanged("status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                if ((object.ReferenceEquals(this.userNameField, value) != true)) {
                    this.userNameField = value;
                    this.RaisePropertyChanged("userName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GaneEnums.PlayerStatus", Namespace="http://schemas.datacontract.org/2004/07/TripasService.Enums")]
    public enum GaneEnumsPlayerStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Offline = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Online = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InGame = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProfileNotFoundFault", Namespace="http://schemas.datacontract.org/2004/07/TripasService.Contracts")]
    [System.SerializableAttribute()]
    public partial class ProfileNotFoundFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Message", Namespace="http://schemas.datacontract.org/2004/07/TripasService.Contracts")]
    [System.SerializableAttribute()]
    public partial class Message : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string chatMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime timeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string userNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string chatMessage {
            get {
                return this.chatMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.chatMessageField, value) != true)) {
                    this.chatMessageField = value;
                    this.RaisePropertyChanged("chatMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime timeStamp {
            get {
                return this.timeStampField;
            }
            set {
                if ((this.timeStampField.Equals(value) != true)) {
                    this.timeStampField = value;
                    this.RaisePropertyChanged("timeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                if ((object.ReferenceEquals(this.userNameField, value) != true)) {
                    this.userNameField = value;
                    this.RaisePropertyChanged("userName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TripasDeGatoServicio.IUserManager")]
    public interface IUserManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/createAccount", ReplyAction="http://tempuri.org/IUserManager/createAccountResponse")]
        int createAccount(TripasDeGatoCliente.TripasDeGatoServicio.LoginUser user, TripasDeGatoCliente.TripasDeGatoServicio.Profile profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/createAccount", ReplyAction="http://tempuri.org/IUserManager/createAccountResponse")]
        System.Threading.Tasks.Task<int> createAccountAsync(TripasDeGatoCliente.TripasDeGatoServicio.LoginUser user, TripasDeGatoCliente.TripasDeGatoServicio.Profile profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/updateProfile", ReplyAction="http://tempuri.org/IUserManager/updateProfileResponse")]
        int updateProfile(int idProfile, string newUsername, string newPic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/updateProfile", ReplyAction="http://tempuri.org/IUserManager/updateProfileResponse")]
        System.Threading.Tasks.Task<int> updateProfileAsync(int idProfile, string newUsername, string newPic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/verifyLogin", ReplyAction="http://tempuri.org/IUserManager/verifyLoginResponse")]
        int verifyLogin(string mail, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/verifyLogin", ReplyAction="http://tempuri.org/IUserManager/verifyLoginResponse")]
        System.Threading.Tasks.Task<int> verifyLoginAsync(string mail, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/getProfileId", ReplyAction="http://tempuri.org/IUserManager/getProfileIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TripasDeGatoCliente.TripasDeGatoServicio.ProfileNotFoundFault), Action="http://tempuri.org/IUserManager/getProfileIdProfileNotFoundFaultFault", Name="ProfileNotFoundFault", Namespace="http://schemas.datacontract.org/2004/07/TripasService.Contracts")]
        int getProfileId(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/getProfileId", ReplyAction="http://tempuri.org/IUserManager/getProfileIdResponse")]
        System.Threading.Tasks.Task<int> getProfileIdAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/isEmailRegistered", ReplyAction="http://tempuri.org/IUserManager/isEmailRegisteredResponse")]
        bool isEmailRegistered(string mail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/isEmailRegistered", ReplyAction="http://tempuri.org/IUserManager/isEmailRegisteredResponse")]
        System.Threading.Tasks.Task<bool> isEmailRegisteredAsync(string mail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/updateProfileName", ReplyAction="http://tempuri.org/IUserManager/updateProfileNameResponse")]
        int updateProfileName(int idProfile, string newProfileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/updateProfileName", ReplyAction="http://tempuri.org/IUserManager/updateProfileNameResponse")]
        System.Threading.Tasks.Task<int> updateProfileNameAsync(int idProfile, string newProfileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/updateProfilePic", ReplyAction="http://tempuri.org/IUserManager/updateProfilePicResponse")]
        int updateProfilePic(int idProfile, string newProfilePic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/updateProfilePic", ReplyAction="http://tempuri.org/IUserManager/updateProfilePicResponse")]
        System.Threading.Tasks.Task<int> updateProfilePicAsync(int idProfile, string newProfilePic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/getProfileByMail", ReplyAction="http://tempuri.org/IUserManager/getProfileByMailResponse")]
        TripasDeGatoCliente.TripasDeGatoServicio.Profile getProfileByMail(string mail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/getProfileByMail", ReplyAction="http://tempuri.org/IUserManager/getProfileByMailResponse")]
        System.Threading.Tasks.Task<TripasDeGatoCliente.TripasDeGatoServicio.Profile> getProfileByMailAsync(string mail);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserManagerChannel : TripasDeGatoCliente.TripasDeGatoServicio.IUserManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserManagerClient : System.ServiceModel.ClientBase<TripasDeGatoCliente.TripasDeGatoServicio.IUserManager>, TripasDeGatoCliente.TripasDeGatoServicio.IUserManager {
        
        public UserManagerClient() {
        }
        
        public UserManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int createAccount(TripasDeGatoCliente.TripasDeGatoServicio.LoginUser user, TripasDeGatoCliente.TripasDeGatoServicio.Profile profile) {
            return base.Channel.createAccount(user, profile);
        }
        
        public System.Threading.Tasks.Task<int> createAccountAsync(TripasDeGatoCliente.TripasDeGatoServicio.LoginUser user, TripasDeGatoCliente.TripasDeGatoServicio.Profile profile) {
            return base.Channel.createAccountAsync(user, profile);
        }
        
        public int updateProfile(int idProfile, string newUsername, string newPic) {
            return base.Channel.updateProfile(idProfile, newUsername, newPic);
        }
        
        public System.Threading.Tasks.Task<int> updateProfileAsync(int idProfile, string newUsername, string newPic) {
            return base.Channel.updateProfileAsync(idProfile, newUsername, newPic);
        }
        
        public int verifyLogin(string mail, string password) {
            return base.Channel.verifyLogin(mail, password);
        }
        
        public System.Threading.Tasks.Task<int> verifyLoginAsync(string mail, string password) {
            return base.Channel.verifyLoginAsync(mail, password);
        }
        
        public int getProfileId(string userName) {
            return base.Channel.getProfileId(userName);
        }
        
        public System.Threading.Tasks.Task<int> getProfileIdAsync(string userName) {
            return base.Channel.getProfileIdAsync(userName);
        }
        
        public bool isEmailRegistered(string mail) {
            return base.Channel.isEmailRegistered(mail);
        }
        
        public System.Threading.Tasks.Task<bool> isEmailRegisteredAsync(string mail) {
            return base.Channel.isEmailRegisteredAsync(mail);
        }
        
        public int updateProfileName(int idProfile, string newProfileName) {
            return base.Channel.updateProfileName(idProfile, newProfileName);
        }
        
        public System.Threading.Tasks.Task<int> updateProfileNameAsync(int idProfile, string newProfileName) {
            return base.Channel.updateProfileNameAsync(idProfile, newProfileName);
        }
        
        public int updateProfilePic(int idProfile, string newProfilePic) {
            return base.Channel.updateProfilePic(idProfile, newProfilePic);
        }
        
        public System.Threading.Tasks.Task<int> updateProfilePicAsync(int idProfile, string newProfilePic) {
            return base.Channel.updateProfilePicAsync(idProfile, newProfilePic);
        }
        
        public TripasDeGatoCliente.TripasDeGatoServicio.Profile getProfileByMail(string mail) {
            return base.Channel.getProfileByMail(mail);
        }
        
        public System.Threading.Tasks.Task<TripasDeGatoCliente.TripasDeGatoServicio.Profile> getProfileByMailAsync(string mail) {
            return base.Channel.getProfileByMailAsync(mail);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TripasDeGatoServicio.IFriendsManager")]
    public interface IFriendsManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsManager/addFriend", ReplyAction="http://tempuri.org/IFriendsManager/addFriendResponse")]
        int addFriend(int idProfile1, int idProfile2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsManager/addFriend", ReplyAction="http://tempuri.org/IFriendsManager/addFriendResponse")]
        System.Threading.Tasks.Task<int> addFriendAsync(int idProfile1, int idProfile2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsManager/deleteFriend", ReplyAction="http://tempuri.org/IFriendsManager/deleteFriendResponse")]
        int deleteFriend(int idProfile1, int idProfile2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsManager/deleteFriend", ReplyAction="http://tempuri.org/IFriendsManager/deleteFriendResponse")]
        System.Threading.Tasks.Task<int> deleteFriendAsync(int idProfile1, int idProfile2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsManager/deleteFriendship", ReplyAction="http://tempuri.org/IFriendsManager/deleteFriendshipResponse")]
        int deleteFriendship(string userName1, string userName2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsManager/deleteFriendship", ReplyAction="http://tempuri.org/IFriendsManager/deleteFriendshipResponse")]
        System.Threading.Tasks.Task<int> deleteFriendshipAsync(string userName1, string userName2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsManager/getFriends", ReplyAction="http://tempuri.org/IFriendsManager/getFriendsResponse")]
        TripasDeGatoCliente.TripasDeGatoServicio.Profile[] getFriends(int idProfile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsManager/getFriends", ReplyAction="http://tempuri.org/IFriendsManager/getFriendsResponse")]
        System.Threading.Tasks.Task<TripasDeGatoCliente.TripasDeGatoServicio.Profile[]> getFriendsAsync(int idProfile);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFriendsManagerChannel : TripasDeGatoCliente.TripasDeGatoServicio.IFriendsManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FriendsManagerClient : System.ServiceModel.ClientBase<TripasDeGatoCliente.TripasDeGatoServicio.IFriendsManager>, TripasDeGatoCliente.TripasDeGatoServicio.IFriendsManager {
        
        public FriendsManagerClient() {
        }
        
        public FriendsManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FriendsManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FriendsManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FriendsManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int addFriend(int idProfile1, int idProfile2) {
            return base.Channel.addFriend(idProfile1, idProfile2);
        }
        
        public System.Threading.Tasks.Task<int> addFriendAsync(int idProfile1, int idProfile2) {
            return base.Channel.addFriendAsync(idProfile1, idProfile2);
        }
        
        public int deleteFriend(int idProfile1, int idProfile2) {
            return base.Channel.deleteFriend(idProfile1, idProfile2);
        }
        
        public System.Threading.Tasks.Task<int> deleteFriendAsync(int idProfile1, int idProfile2) {
            return base.Channel.deleteFriendAsync(idProfile1, idProfile2);
        }
        
        public int deleteFriendship(string userName1, string userName2) {
            return base.Channel.deleteFriendship(userName1, userName2);
        }
        
        public System.Threading.Tasks.Task<int> deleteFriendshipAsync(string userName1, string userName2) {
            return base.Channel.deleteFriendshipAsync(userName1, userName2);
        }
        
        public TripasDeGatoCliente.TripasDeGatoServicio.Profile[] getFriends(int idProfile) {
            return base.Channel.getFriends(idProfile);
        }
        
        public System.Threading.Tasks.Task<TripasDeGatoCliente.TripasDeGatoServicio.Profile[]> getFriendsAsync(int idProfile) {
            return base.Channel.getFriendsAsync(idProfile);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TripasDeGatoServicio.IChatManager", CallbackContract=typeof(TripasDeGatoCliente.TripasDeGatoServicio.IChatManagerCallback))]
    public interface IChatManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatManager/sendMessage", ReplyAction="http://tempuri.org/IChatManager/sendMessageResponse")]
        void sendMessage(string userName, TripasDeGatoCliente.TripasDeGatoServicio.Message message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatManager/sendMessage", ReplyAction="http://tempuri.org/IChatManager/sendMessageResponse")]
        System.Threading.Tasks.Task sendMessageAsync(string userName, TripasDeGatoCliente.TripasDeGatoServicio.Message message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatManager/connectToLobby", ReplyAction="http://tempuri.org/IChatManager/connectToLobbyResponse")]
        void connectToLobby(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatManager/connectToLobby", ReplyAction="http://tempuri.org/IChatManager/connectToLobbyResponse")]
        System.Threading.Tasks.Task connectToLobbyAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatManager/leaveLobby", ReplyAction="http://tempuri.org/IChatManager/leaveLobbyResponse")]
        void leaveLobby(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatManager/leaveLobby", ReplyAction="http://tempuri.org/IChatManager/leaveLobbyResponse")]
        System.Threading.Tasks.Task leaveLobbyAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatManager/getMessageHistory", ReplyAction="http://tempuri.org/IChatManager/getMessageHistoryResponse")]
        TripasDeGatoCliente.TripasDeGatoServicio.Message[] getMessageHistory();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatManager/getMessageHistory", ReplyAction="http://tempuri.org/IChatManager/getMessageHistoryResponse")]
        System.Threading.Tasks.Task<TripasDeGatoCliente.TripasDeGatoServicio.Message[]> getMessageHistoryAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatManagerCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManager/broadcastMessage")]
        void broadcastMessage(TripasDeGatoCliente.TripasDeGatoServicio.Message message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatManagerChannel : TripasDeGatoCliente.TripasDeGatoServicio.IChatManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChatManagerClient : System.ServiceModel.DuplexClientBase<TripasDeGatoCliente.TripasDeGatoServicio.IChatManager>, TripasDeGatoCliente.TripasDeGatoServicio.IChatManager {
        
        public ChatManagerClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ChatManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ChatManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatManagerClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void sendMessage(string userName, TripasDeGatoCliente.TripasDeGatoServicio.Message message) {
            base.Channel.sendMessage(userName, message);
        }
        
        public System.Threading.Tasks.Task sendMessageAsync(string userName, TripasDeGatoCliente.TripasDeGatoServicio.Message message) {
            return base.Channel.sendMessageAsync(userName, message);
        }
        
        public void connectToLobby(string userName) {
            base.Channel.connectToLobby(userName);
        }
        
        public System.Threading.Tasks.Task connectToLobbyAsync(string userName) {
            return base.Channel.connectToLobbyAsync(userName);
        }
        
        public void leaveLobby(string userName) {
            base.Channel.leaveLobby(userName);
        }
        
        public System.Threading.Tasks.Task leaveLobbyAsync(string userName) {
            return base.Channel.leaveLobbyAsync(userName);
        }
        
        public TripasDeGatoCliente.TripasDeGatoServicio.Message[] getMessageHistory() {
            return base.Channel.getMessageHistory();
        }
        
        public System.Threading.Tasks.Task<TripasDeGatoCliente.TripasDeGatoServicio.Message[]> getMessageHistoryAsync() {
            return base.Channel.getMessageHistoryAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TripasDeGatoServicio.IPasswordRecoveryManager")]
    public interface IPasswordRecoveryManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPasswordRecoveryManager/SendRecoveryCode", ReplyAction="http://tempuri.org/IPasswordRecoveryManager/SendRecoveryCodeResponse")]
        int SendRecoveryCode(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPasswordRecoveryManager/SendRecoveryCode", ReplyAction="http://tempuri.org/IPasswordRecoveryManager/SendRecoveryCodeResponse")]
        System.Threading.Tasks.Task<int> SendRecoveryCodeAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPasswordRecoveryManager/VerifyRecoveryCode", ReplyAction="http://tempuri.org/IPasswordRecoveryManager/VerifyRecoveryCodeResponse")]
        bool VerifyRecoveryCode(string email, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPasswordRecoveryManager/VerifyRecoveryCode", ReplyAction="http://tempuri.org/IPasswordRecoveryManager/VerifyRecoveryCodeResponse")]
        System.Threading.Tasks.Task<bool> VerifyRecoveryCodeAsync(string email, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPasswordRecoveryManager/UpdatePassword", ReplyAction="http://tempuri.org/IPasswordRecoveryManager/UpdatePasswordResponse")]
        int UpdatePassword(string email, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPasswordRecoveryManager/UpdatePassword", ReplyAction="http://tempuri.org/IPasswordRecoveryManager/UpdatePasswordResponse")]
        System.Threading.Tasks.Task<int> UpdatePasswordAsync(string email, string newPassword);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPasswordRecoveryManagerChannel : TripasDeGatoCliente.TripasDeGatoServicio.IPasswordRecoveryManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PasswordRecoveryManagerClient : System.ServiceModel.ClientBase<TripasDeGatoCliente.TripasDeGatoServicio.IPasswordRecoveryManager>, TripasDeGatoCliente.TripasDeGatoServicio.IPasswordRecoveryManager {
        
        public PasswordRecoveryManagerClient() {
        }
        
        public PasswordRecoveryManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PasswordRecoveryManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PasswordRecoveryManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PasswordRecoveryManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int SendRecoveryCode(string email) {
            return base.Channel.SendRecoveryCode(email);
        }
        
        public System.Threading.Tasks.Task<int> SendRecoveryCodeAsync(string email) {
            return base.Channel.SendRecoveryCodeAsync(email);
        }
        
        public bool VerifyRecoveryCode(string email, string code) {
            return base.Channel.VerifyRecoveryCode(email, code);
        }
        
        public System.Threading.Tasks.Task<bool> VerifyRecoveryCodeAsync(string email, string code) {
            return base.Channel.VerifyRecoveryCodeAsync(email, code);
        }
        
        public int UpdatePassword(string email, string newPassword) {
            return base.Channel.UpdatePassword(email, newPassword);
        }
        
        public System.Threading.Tasks.Task<int> UpdatePasswordAsync(string email, string newPassword) {
            return base.Channel.UpdatePasswordAsync(email, newPassword);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TripasDeGatoServicio.IEmailVerificationManager")]
    public interface IEmailVerificationManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailVerificationManager/sendVerificationCodeRegister", ReplyAction="http://tempuri.org/IEmailVerificationManager/sendVerificationCodeRegisterResponse" +
            "")]
        int sendVerificationCodeRegister(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailVerificationManager/sendVerificationCodeRegister", ReplyAction="http://tempuri.org/IEmailVerificationManager/sendVerificationCodeRegisterResponse" +
            "")]
        System.Threading.Tasks.Task<int> sendVerificationCodeRegisterAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailVerificationManager/verifyCode", ReplyAction="http://tempuri.org/IEmailVerificationManager/verifyCodeResponse")]
        bool verifyCode(string email, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailVerificationManager/verifyCode", ReplyAction="http://tempuri.org/IEmailVerificationManager/verifyCodeResponse")]
        System.Threading.Tasks.Task<bool> verifyCodeAsync(string email, string code);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmailVerificationManagerChannel : TripasDeGatoCliente.TripasDeGatoServicio.IEmailVerificationManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmailVerificationManagerClient : System.ServiceModel.ClientBase<TripasDeGatoCliente.TripasDeGatoServicio.IEmailVerificationManager>, TripasDeGatoCliente.TripasDeGatoServicio.IEmailVerificationManager {
        
        public EmailVerificationManagerClient() {
        }
        
        public EmailVerificationManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmailVerificationManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmailVerificationManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmailVerificationManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int sendVerificationCodeRegister(string email) {
            return base.Channel.sendVerificationCodeRegister(email);
        }
        
        public System.Threading.Tasks.Task<int> sendVerificationCodeRegisterAsync(string email) {
            return base.Channel.sendVerificationCodeRegisterAsync(email);
        }
        
        public bool verifyCode(string email, string code) {
            return base.Channel.verifyCode(email, code);
        }
        
        public System.Threading.Tasks.Task<bool> verifyCodeAsync(string email, string code) {
            return base.Channel.verifyCodeAsync(email, code);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TripasDeGatoServicio.ILeaderboardManager")]
    public interface ILeaderboardManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeaderboardManager/getHighestScores", ReplyAction="http://tempuri.org/ILeaderboardManager/getHighestScoresResponse")]
        TripasDeGatoCliente.TripasDeGatoServicio.Profile[] getHighestScores();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeaderboardManager/getHighestScores", ReplyAction="http://tempuri.org/ILeaderboardManager/getHighestScoresResponse")]
        System.Threading.Tasks.Task<TripasDeGatoCliente.TripasDeGatoServicio.Profile[]> getHighestScoresAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILeaderboardManagerChannel : TripasDeGatoCliente.TripasDeGatoServicio.ILeaderboardManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LeaderboardManagerClient : System.ServiceModel.ClientBase<TripasDeGatoCliente.TripasDeGatoServicio.ILeaderboardManager>, TripasDeGatoCliente.TripasDeGatoServicio.ILeaderboardManager {
        
        public LeaderboardManagerClient() {
        }
        
        public LeaderboardManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LeaderboardManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LeaderboardManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LeaderboardManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TripasDeGatoCliente.TripasDeGatoServicio.Profile[] getHighestScores() {
            return base.Channel.getHighestScores();
        }
        
        public System.Threading.Tasks.Task<TripasDeGatoCliente.TripasDeGatoServicio.Profile[]> getHighestScoresAsync() {
            return base.Channel.getHighestScoresAsync();
        }
    }
}
