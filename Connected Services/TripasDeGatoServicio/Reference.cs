//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TripasDeGatoCliente.TripasDeGatoServicio {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginUser", Namespace="http://schemas.datacontract.org/2004/07/TripasService.Contracts")]
    [System.SerializableAttribute()]
    public partial class LoginUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idLoginUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string mailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idLoginUser {
            get {
                return this.idLoginUserField;
            }
            set {
                if ((this.idLoginUserField.Equals(value) != true)) {
                    this.idLoginUserField = value;
                    this.RaisePropertyChanged("idLoginUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string mail {
            get {
                return this.mailField;
            }
            set {
                if ((object.ReferenceEquals(this.mailField, value) != true)) {
                    this.mailField = value;
                    this.RaisePropertyChanged("mail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Profile", Namespace="http://schemas.datacontract.org/2004/07/TripasService.Contracts")]
    [System.SerializableAttribute()]
    public partial class Profile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string picturePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int scoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TripasDeGatoCliente.TripasDeGatoServicio.GameEnumsPlayerStatus statusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string userNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idProfile {
            get {
                return this.idProfileField;
            }
            set {
                if ((this.idProfileField.Equals(value) != true)) {
                    this.idProfileField = value;
                    this.RaisePropertyChanged("idProfile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string picturePath {
            get {
                return this.picturePathField;
            }
            set {
                if ((object.ReferenceEquals(this.picturePathField, value) != true)) {
                    this.picturePathField = value;
                    this.RaisePropertyChanged("picturePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int score {
            get {
                return this.scoreField;
            }
            set {
                if ((this.scoreField.Equals(value) != true)) {
                    this.scoreField = value;
                    this.RaisePropertyChanged("score");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TripasDeGatoCliente.TripasDeGatoServicio.GameEnumsPlayerStatus status {
            get {
                return this.statusField;
            }
            set {
                if ((this.statusField.Equals(value) != true)) {
                    this.statusField = value;
                    this.RaisePropertyChanged("status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                if ((object.ReferenceEquals(this.userNameField, value) != true)) {
                    this.userNameField = value;
                    this.RaisePropertyChanged("userName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameEnums.PlayerStatus", Namespace="http://schemas.datacontract.org/2004/07/TripasService.Utils")]
    public enum GameEnumsPlayerStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Offline = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Online = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InGame = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProfileNotFoundFault", Namespace="http://schemas.datacontract.org/2004/07/TripasService.Contracts")]
    [System.SerializableAttribute()]
    public partial class ProfileNotFoundFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Message", Namespace="http://schemas.datacontract.org/2004/07/TripasService.Contracts")]
    [System.SerializableAttribute()]
    public partial class Message : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string chatMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime timeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string userNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string chatMessage {
            get {
                return this.chatMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.chatMessageField, value) != true)) {
                    this.chatMessageField = value;
                    this.RaisePropertyChanged("chatMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime timeStamp {
            get {
                return this.timeStampField;
            }
            set {
                if ((this.timeStampField.Equals(value) != true)) {
                    this.timeStampField = value;
                    this.RaisePropertyChanged("timeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                if ((object.ReferenceEquals(this.userNameField, value) != true)) {
                    this.userNameField = value;
                    this.RaisePropertyChanged("userName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Lobby", Namespace="http://schemas.datacontract.org/2004/07/TripasService.Logic")]
    [System.SerializableAttribute()]
    public partial class Lobby : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GameNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NodeCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, TripasDeGatoCliente.TripasDeGatoServicio.Profile> PlayersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GameName {
            get {
                return this.GameNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GameNameField, value) != true)) {
                    this.GameNameField = value;
                    this.RaisePropertyChanged("GameName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NodeCount {
            get {
                return this.NodeCountField;
            }
            set {
                if ((this.NodeCountField.Equals(value) != true)) {
                    this.NodeCountField = value;
                    this.RaisePropertyChanged("NodeCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, TripasDeGatoCliente.TripasDeGatoServicio.Profile> Players {
            get {
                return this.PlayersField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayersField, value) != true)) {
                    this.PlayersField = value;
                    this.RaisePropertyChanged("Players");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TripasDeGatoServicio.IUserManager")]
    public interface IUserManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/CreateAccount", ReplyAction="http://tempuri.org/IUserManager/CreateAccountResponse")]
        int CreateAccount(TripasDeGatoCliente.TripasDeGatoServicio.LoginUser user, TripasDeGatoCliente.TripasDeGatoServicio.Profile profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/CreateAccount", ReplyAction="http://tempuri.org/IUserManager/CreateAccountResponse")]
        System.Threading.Tasks.Task<int> CreateAccountAsync(TripasDeGatoCliente.TripasDeGatoServicio.LoginUser user, TripasDeGatoCliente.TripasDeGatoServicio.Profile profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/UpdateProfile", ReplyAction="http://tempuri.org/IUserManager/UpdateProfileResponse")]
        int UpdateProfile(int idProfile, string newUsername, string newPic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/UpdateProfile", ReplyAction="http://tempuri.org/IUserManager/UpdateProfileResponse")]
        System.Threading.Tasks.Task<int> UpdateProfileAsync(int idProfile, string newUsername, string newPic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/VerifyLogin", ReplyAction="http://tempuri.org/IUserManager/VerifyLoginResponse")]
        int VerifyLogin(string mail, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/VerifyLogin", ReplyAction="http://tempuri.org/IUserManager/VerifyLoginResponse")]
        System.Threading.Tasks.Task<int> VerifyLoginAsync(string mail, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/GetProfileId", ReplyAction="http://tempuri.org/IUserManager/GetProfileIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TripasDeGatoCliente.TripasDeGatoServicio.ProfileNotFoundFault), Action="http://tempuri.org/IUserManager/GetProfileIdProfileNotFoundFaultFault", Name="ProfileNotFoundFault", Namespace="http://schemas.datacontract.org/2004/07/TripasService.Contracts")]
        int GetProfileId(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/GetProfileId", ReplyAction="http://tempuri.org/IUserManager/GetProfileIdResponse")]
        System.Threading.Tasks.Task<int> GetProfileIdAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/IsEmailRegistered", ReplyAction="http://tempuri.org/IUserManager/IsEmailRegisteredResponse")]
        bool IsEmailRegistered(string mail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/IsEmailRegistered", ReplyAction="http://tempuri.org/IUserManager/IsEmailRegisteredResponse")]
        System.Threading.Tasks.Task<bool> IsEmailRegisteredAsync(string mail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/UpdateProfileName", ReplyAction="http://tempuri.org/IUserManager/UpdateProfileNameResponse")]
        int UpdateProfileName(int idProfile, string newProfileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/UpdateProfileName", ReplyAction="http://tempuri.org/IUserManager/UpdateProfileNameResponse")]
        System.Threading.Tasks.Task<int> UpdateProfileNameAsync(int idProfile, string newProfileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/UpdateProfilePic", ReplyAction="http://tempuri.org/IUserManager/UpdateProfilePicResponse")]
        int UpdateProfilePic(int idProfile, string newProfilePic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/UpdateProfilePic", ReplyAction="http://tempuri.org/IUserManager/UpdateProfilePicResponse")]
        System.Threading.Tasks.Task<int> UpdateProfilePicAsync(int idProfile, string newProfilePic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/GetProfileByMail", ReplyAction="http://tempuri.org/IUserManager/GetProfileByMailResponse")]
        TripasDeGatoCliente.TripasDeGatoServicio.Profile GetProfileByMail(string mail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/GetProfileByMail", ReplyAction="http://tempuri.org/IUserManager/GetProfileByMailResponse")]
        System.Threading.Tasks.Task<TripasDeGatoCliente.TripasDeGatoServicio.Profile> GetProfileByMailAsync(string mail);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserManagerChannel : TripasDeGatoCliente.TripasDeGatoServicio.IUserManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserManagerClient : System.ServiceModel.ClientBase<TripasDeGatoCliente.TripasDeGatoServicio.IUserManager>, TripasDeGatoCliente.TripasDeGatoServicio.IUserManager {
        
        public UserManagerClient() {
        }
        
        public UserManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int CreateAccount(TripasDeGatoCliente.TripasDeGatoServicio.LoginUser user, TripasDeGatoCliente.TripasDeGatoServicio.Profile profile) {
            return base.Channel.CreateAccount(user, profile);
        }
        
        public System.Threading.Tasks.Task<int> CreateAccountAsync(TripasDeGatoCliente.TripasDeGatoServicio.LoginUser user, TripasDeGatoCliente.TripasDeGatoServicio.Profile profile) {
            return base.Channel.CreateAccountAsync(user, profile);
        }
        
        public int UpdateProfile(int idProfile, string newUsername, string newPic) {
            return base.Channel.UpdateProfile(idProfile, newUsername, newPic);
        }
        
        public System.Threading.Tasks.Task<int> UpdateProfileAsync(int idProfile, string newUsername, string newPic) {
            return base.Channel.UpdateProfileAsync(idProfile, newUsername, newPic);
        }
        
        public int VerifyLogin(string mail, string password) {
            return base.Channel.VerifyLogin(mail, password);
        }
        
        public System.Threading.Tasks.Task<int> VerifyLoginAsync(string mail, string password) {
            return base.Channel.VerifyLoginAsync(mail, password);
        }
        
        public int GetProfileId(string userName) {
            return base.Channel.GetProfileId(userName);
        }
        
        public System.Threading.Tasks.Task<int> GetProfileIdAsync(string userName) {
            return base.Channel.GetProfileIdAsync(userName);
        }
        
        public bool IsEmailRegistered(string mail) {
            return base.Channel.IsEmailRegistered(mail);
        }
        
        public System.Threading.Tasks.Task<bool> IsEmailRegisteredAsync(string mail) {
            return base.Channel.IsEmailRegisteredAsync(mail);
        }
        
        public int UpdateProfileName(int idProfile, string newProfileName) {
            return base.Channel.UpdateProfileName(idProfile, newProfileName);
        }
        
        public System.Threading.Tasks.Task<int> UpdateProfileNameAsync(int idProfile, string newProfileName) {
            return base.Channel.UpdateProfileNameAsync(idProfile, newProfileName);
        }
        
        public int UpdateProfilePic(int idProfile, string newProfilePic) {
            return base.Channel.UpdateProfilePic(idProfile, newProfilePic);
        }
        
        public System.Threading.Tasks.Task<int> UpdateProfilePicAsync(int idProfile, string newProfilePic) {
            return base.Channel.UpdateProfilePicAsync(idProfile, newProfilePic);
        }
        
        public TripasDeGatoCliente.TripasDeGatoServicio.Profile GetProfileByMail(string mail) {
            return base.Channel.GetProfileByMail(mail);
        }
        
        public System.Threading.Tasks.Task<TripasDeGatoCliente.TripasDeGatoServicio.Profile> GetProfileByMailAsync(string mail) {
            return base.Channel.GetProfileByMailAsync(mail);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TripasDeGatoServicio.IFriendsManager")]
    public interface IFriendsManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsManager/AddFriend", ReplyAction="http://tempuri.org/IFriendsManager/AddFriendResponse")]
        int AddFriend(int idProfile1, int idProfile2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsManager/AddFriend", ReplyAction="http://tempuri.org/IFriendsManager/AddFriendResponse")]
        System.Threading.Tasks.Task<int> AddFriendAsync(int idProfile1, int idProfile2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsManager/DeleteFriend", ReplyAction="http://tempuri.org/IFriendsManager/DeleteFriendResponse")]
        int DeleteFriend(int idProfile1, int idProfile2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsManager/DeleteFriend", ReplyAction="http://tempuri.org/IFriendsManager/DeleteFriendResponse")]
        System.Threading.Tasks.Task<int> DeleteFriendAsync(int idProfile1, int idProfile2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsManager/DeleteFriendship", ReplyAction="http://tempuri.org/IFriendsManager/DeleteFriendshipResponse")]
        int DeleteFriendship(string userName1, string userName2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsManager/DeleteFriendship", ReplyAction="http://tempuri.org/IFriendsManager/DeleteFriendshipResponse")]
        System.Threading.Tasks.Task<int> DeleteFriendshipAsync(string userName1, string userName2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsManager/GetFriends", ReplyAction="http://tempuri.org/IFriendsManager/GetFriendsResponse")]
        TripasDeGatoCliente.TripasDeGatoServicio.Profile[] GetFriends(int idProfile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsManager/GetFriends", ReplyAction="http://tempuri.org/IFriendsManager/GetFriendsResponse")]
        System.Threading.Tasks.Task<TripasDeGatoCliente.TripasDeGatoServicio.Profile[]> GetFriendsAsync(int idProfile);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFriendsManagerChannel : TripasDeGatoCliente.TripasDeGatoServicio.IFriendsManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FriendsManagerClient : System.ServiceModel.ClientBase<TripasDeGatoCliente.TripasDeGatoServicio.IFriendsManager>, TripasDeGatoCliente.TripasDeGatoServicio.IFriendsManager {
        
        public FriendsManagerClient() {
        }
        
        public FriendsManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FriendsManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FriendsManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FriendsManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddFriend(int idProfile1, int idProfile2) {
            return base.Channel.AddFriend(idProfile1, idProfile2);
        }
        
        public System.Threading.Tasks.Task<int> AddFriendAsync(int idProfile1, int idProfile2) {
            return base.Channel.AddFriendAsync(idProfile1, idProfile2);
        }
        
        public int DeleteFriend(int idProfile1, int idProfile2) {
            return base.Channel.DeleteFriend(idProfile1, idProfile2);
        }
        
        public System.Threading.Tasks.Task<int> DeleteFriendAsync(int idProfile1, int idProfile2) {
            return base.Channel.DeleteFriendAsync(idProfile1, idProfile2);
        }
        
        public int DeleteFriendship(string userName1, string userName2) {
            return base.Channel.DeleteFriendship(userName1, userName2);
        }
        
        public System.Threading.Tasks.Task<int> DeleteFriendshipAsync(string userName1, string userName2) {
            return base.Channel.DeleteFriendshipAsync(userName1, userName2);
        }
        
        public TripasDeGatoCliente.TripasDeGatoServicio.Profile[] GetFriends(int idProfile) {
            return base.Channel.GetFriends(idProfile);
        }
        
        public System.Threading.Tasks.Task<TripasDeGatoCliente.TripasDeGatoServicio.Profile[]> GetFriendsAsync(int idProfile) {
            return base.Channel.GetFriendsAsync(idProfile);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TripasDeGatoServicio.IChatManager", CallbackContract=typeof(TripasDeGatoCliente.TripasDeGatoServicio.IChatManagerCallback))]
    public interface IChatManager {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManager/SendMessage")]
        void SendMessage(string userName, TripasDeGatoCliente.TripasDeGatoServicio.Message message, string lobbyCode);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManager/SendMessage")]
        System.Threading.Tasks.Task SendMessageAsync(string userName, TripasDeGatoCliente.TripasDeGatoServicio.Message message, string lobbyCode);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManager/ConnectToChat")]
        void ConnectToChat(string userName, string lobbyCode);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManager/ConnectToChat")]
        System.Threading.Tasks.Task ConnectToChatAsync(string userName, string lobbyCode);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManager/LeaveChat")]
        void LeaveChat(string userName, string lobbyCode);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManager/LeaveChat")]
        System.Threading.Tasks.Task LeaveChatAsync(string userName, string lobbyCode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatManagerCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatManager/BroadcastMessage", ReplyAction="http://tempuri.org/IChatManager/BroadcastMessageResponse")]
        void BroadcastMessage(TripasDeGatoCliente.TripasDeGatoServicio.Message message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatManagerChannel : TripasDeGatoCliente.TripasDeGatoServicio.IChatManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChatManagerClient : System.ServiceModel.DuplexClientBase<TripasDeGatoCliente.TripasDeGatoServicio.IChatManager>, TripasDeGatoCliente.TripasDeGatoServicio.IChatManager {
        
        public ChatManagerClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ChatManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ChatManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatManagerClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void SendMessage(string userName, TripasDeGatoCliente.TripasDeGatoServicio.Message message, string lobbyCode) {
            base.Channel.SendMessage(userName, message, lobbyCode);
        }
        
        public System.Threading.Tasks.Task SendMessageAsync(string userName, TripasDeGatoCliente.TripasDeGatoServicio.Message message, string lobbyCode) {
            return base.Channel.SendMessageAsync(userName, message, lobbyCode);
        }
        
        public void ConnectToChat(string userName, string lobbyCode) {
            base.Channel.ConnectToChat(userName, lobbyCode);
        }
        
        public System.Threading.Tasks.Task ConnectToChatAsync(string userName, string lobbyCode) {
            return base.Channel.ConnectToChatAsync(userName, lobbyCode);
        }
        
        public void LeaveChat(string userName, string lobbyCode) {
            base.Channel.LeaveChat(userName, lobbyCode);
        }
        
        public System.Threading.Tasks.Task LeaveChatAsync(string userName, string lobbyCode) {
            return base.Channel.LeaveChatAsync(userName, lobbyCode);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TripasDeGatoServicio.IPasswordRecoveryManager")]
    public interface IPasswordRecoveryManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPasswordRecoveryManager/SendRecoveryCode", ReplyAction="http://tempuri.org/IPasswordRecoveryManager/SendRecoveryCodeResponse")]
        int SendRecoveryCode(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPasswordRecoveryManager/SendRecoveryCode", ReplyAction="http://tempuri.org/IPasswordRecoveryManager/SendRecoveryCodeResponse")]
        System.Threading.Tasks.Task<int> SendRecoveryCodeAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPasswordRecoveryManager/VerifyRecoveryCode", ReplyAction="http://tempuri.org/IPasswordRecoveryManager/VerifyRecoveryCodeResponse")]
        bool VerifyRecoveryCode(string email, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPasswordRecoveryManager/VerifyRecoveryCode", ReplyAction="http://tempuri.org/IPasswordRecoveryManager/VerifyRecoveryCodeResponse")]
        System.Threading.Tasks.Task<bool> VerifyRecoveryCodeAsync(string email, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPasswordRecoveryManager/UpdatePassword", ReplyAction="http://tempuri.org/IPasswordRecoveryManager/UpdatePasswordResponse")]
        int UpdatePassword(string email, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPasswordRecoveryManager/UpdatePassword", ReplyAction="http://tempuri.org/IPasswordRecoveryManager/UpdatePasswordResponse")]
        System.Threading.Tasks.Task<int> UpdatePasswordAsync(string email, string newPassword);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPasswordRecoveryManagerChannel : TripasDeGatoCliente.TripasDeGatoServicio.IPasswordRecoveryManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PasswordRecoveryManagerClient : System.ServiceModel.ClientBase<TripasDeGatoCliente.TripasDeGatoServicio.IPasswordRecoveryManager>, TripasDeGatoCliente.TripasDeGatoServicio.IPasswordRecoveryManager {
        
        public PasswordRecoveryManagerClient() {
        }
        
        public PasswordRecoveryManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PasswordRecoveryManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PasswordRecoveryManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PasswordRecoveryManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int SendRecoveryCode(string email) {
            return base.Channel.SendRecoveryCode(email);
        }
        
        public System.Threading.Tasks.Task<int> SendRecoveryCodeAsync(string email) {
            return base.Channel.SendRecoveryCodeAsync(email);
        }
        
        public bool VerifyRecoveryCode(string email, string code) {
            return base.Channel.VerifyRecoveryCode(email, code);
        }
        
        public System.Threading.Tasks.Task<bool> VerifyRecoveryCodeAsync(string email, string code) {
            return base.Channel.VerifyRecoveryCodeAsync(email, code);
        }
        
        public int UpdatePassword(string email, string newPassword) {
            return base.Channel.UpdatePassword(email, newPassword);
        }
        
        public System.Threading.Tasks.Task<int> UpdatePasswordAsync(string email, string newPassword) {
            return base.Channel.UpdatePasswordAsync(email, newPassword);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TripasDeGatoServicio.IEmailVerificationManager")]
    public interface IEmailVerificationManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailVerificationManager/SendVerificationCodeRegister", ReplyAction="http://tempuri.org/IEmailVerificationManager/SendVerificationCodeRegisterResponse" +
            "")]
        int SendVerificationCodeRegister(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailVerificationManager/SendVerificationCodeRegister", ReplyAction="http://tempuri.org/IEmailVerificationManager/SendVerificationCodeRegisterResponse" +
            "")]
        System.Threading.Tasks.Task<int> SendVerificationCodeRegisterAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailVerificationManager/VerifyCode", ReplyAction="http://tempuri.org/IEmailVerificationManager/VerifyCodeResponse")]
        bool VerifyCode(string email, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailVerificationManager/VerifyCode", ReplyAction="http://tempuri.org/IEmailVerificationManager/VerifyCodeResponse")]
        System.Threading.Tasks.Task<bool> VerifyCodeAsync(string email, string code);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmailVerificationManagerChannel : TripasDeGatoCliente.TripasDeGatoServicio.IEmailVerificationManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmailVerificationManagerClient : System.ServiceModel.ClientBase<TripasDeGatoCliente.TripasDeGatoServicio.IEmailVerificationManager>, TripasDeGatoCliente.TripasDeGatoServicio.IEmailVerificationManager {
        
        public EmailVerificationManagerClient() {
        }
        
        public EmailVerificationManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmailVerificationManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmailVerificationManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmailVerificationManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int SendVerificationCodeRegister(string email) {
            return base.Channel.SendVerificationCodeRegister(email);
        }
        
        public System.Threading.Tasks.Task<int> SendVerificationCodeRegisterAsync(string email) {
            return base.Channel.SendVerificationCodeRegisterAsync(email);
        }
        
        public bool VerifyCode(string email, string code) {
            return base.Channel.VerifyCode(email, code);
        }
        
        public System.Threading.Tasks.Task<bool> VerifyCodeAsync(string email, string code) {
            return base.Channel.VerifyCodeAsync(email, code);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TripasDeGatoServicio.ILeaderboardManager")]
    public interface ILeaderboardManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeaderboardManager/GetHighestScores", ReplyAction="http://tempuri.org/ILeaderboardManager/GetHighestScoresResponse")]
        TripasDeGatoCliente.TripasDeGatoServicio.Profile[] GetHighestScores();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeaderboardManager/GetHighestScores", ReplyAction="http://tempuri.org/ILeaderboardManager/GetHighestScoresResponse")]
        System.Threading.Tasks.Task<TripasDeGatoCliente.TripasDeGatoServicio.Profile[]> GetHighestScoresAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILeaderboardManagerChannel : TripasDeGatoCliente.TripasDeGatoServicio.ILeaderboardManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LeaderboardManagerClient : System.ServiceModel.ClientBase<TripasDeGatoCliente.TripasDeGatoServicio.ILeaderboardManager>, TripasDeGatoCliente.TripasDeGatoServicio.ILeaderboardManager {
        
        public LeaderboardManagerClient() {
        }
        
        public LeaderboardManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LeaderboardManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LeaderboardManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LeaderboardManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TripasDeGatoCliente.TripasDeGatoServicio.Profile[] GetHighestScores() {
            return base.Channel.GetHighestScores();
        }
        
        public System.Threading.Tasks.Task<TripasDeGatoCliente.TripasDeGatoServicio.Profile[]> GetHighestScoresAsync() {
            return base.Channel.GetHighestScoresAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TripasDeGatoServicio.IStatusManager")]
    public interface IStatusManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatusManager/SetPlayerStatus", ReplyAction="http://tempuri.org/IStatusManager/SetPlayerStatusResponse")]
        bool SetPlayerStatus(int idProfile, TripasDeGatoCliente.TripasDeGatoServicio.GameEnumsPlayerStatus status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatusManager/SetPlayerStatus", ReplyAction="http://tempuri.org/IStatusManager/SetPlayerStatusResponse")]
        System.Threading.Tasks.Task<bool> SetPlayerStatusAsync(int idProfile, TripasDeGatoCliente.TripasDeGatoServicio.GameEnumsPlayerStatus status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatusManager/GetPlayerStatus", ReplyAction="http://tempuri.org/IStatusManager/GetPlayerStatusResponse")]
        TripasDeGatoCliente.TripasDeGatoServicio.GameEnumsPlayerStatus GetPlayerStatus(int idProfile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatusManager/GetPlayerStatus", ReplyAction="http://tempuri.org/IStatusManager/GetPlayerStatusResponse")]
        System.Threading.Tasks.Task<TripasDeGatoCliente.TripasDeGatoServicio.GameEnumsPlayerStatus> GetPlayerStatusAsync(int idProfile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatusManager/DisconnectPlayer", ReplyAction="http://tempuri.org/IStatusManager/DisconnectPlayerResponse")]
        int DisconnectPlayer(int idProfile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatusManager/DisconnectPlayer", ReplyAction="http://tempuri.org/IStatusManager/DisconnectPlayerResponse")]
        System.Threading.Tasks.Task<int> DisconnectPlayerAsync(int idProfile);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStatusManagerChannel : TripasDeGatoCliente.TripasDeGatoServicio.IStatusManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StatusManagerClient : System.ServiceModel.ClientBase<TripasDeGatoCliente.TripasDeGatoServicio.IStatusManager>, TripasDeGatoCliente.TripasDeGatoServicio.IStatusManager {
        
        public StatusManagerClient() {
        }
        
        public StatusManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StatusManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StatusManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StatusManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool SetPlayerStatus(int idProfile, TripasDeGatoCliente.TripasDeGatoServicio.GameEnumsPlayerStatus status) {
            return base.Channel.SetPlayerStatus(idProfile, status);
        }
        
        public System.Threading.Tasks.Task<bool> SetPlayerStatusAsync(int idProfile, TripasDeGatoCliente.TripasDeGatoServicio.GameEnumsPlayerStatus status) {
            return base.Channel.SetPlayerStatusAsync(idProfile, status);
        }
        
        public TripasDeGatoCliente.TripasDeGatoServicio.GameEnumsPlayerStatus GetPlayerStatus(int idProfile) {
            return base.Channel.GetPlayerStatus(idProfile);
        }
        
        public System.Threading.Tasks.Task<TripasDeGatoCliente.TripasDeGatoServicio.GameEnumsPlayerStatus> GetPlayerStatusAsync(int idProfile) {
            return base.Channel.GetPlayerStatusAsync(idProfile);
        }
        
        public int DisconnectPlayer(int idProfile) {
            return base.Channel.DisconnectPlayer(idProfile);
        }
        
        public System.Threading.Tasks.Task<int> DisconnectPlayerAsync(int idProfile) {
            return base.Channel.DisconnectPlayerAsync(idProfile);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TripasDeGatoServicio.ILobbyManager", CallbackContract=typeof(TripasDeGatoCliente.TripasDeGatoServicio.ILobbyManagerCallback))]
    public interface ILobbyManager {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyManager/LeaveLobby")]
        void LeaveLobby(string code, int playerId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyManager/LeaveLobby")]
        System.Threading.Tasks.Task LeaveLobbyAsync(string code, int playerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyManager/ConnectPlayerToLobby", ReplyAction="http://tempuri.org/ILobbyManager/ConnectPlayerToLobbyResponse")]
        bool ConnectPlayerToLobby(string code, int playerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyManager/ConnectPlayerToLobby", ReplyAction="http://tempuri.org/ILobbyManager/ConnectPlayerToLobbyResponse")]
        System.Threading.Tasks.Task<bool> ConnectPlayerToLobbyAsync(string code, int playerId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILobbyManagerCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyManager/RemoveFromLobby", ReplyAction="http://tempuri.org/ILobbyManager/RemoveFromLobbyResponse")]
        void RemoveFromLobby();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyManager/HostLeftCallback", ReplyAction="http://tempuri.org/ILobbyManager/HostLeftCallbackResponse")]
        void HostLeftCallback();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyManager/GuestLeftCallback", ReplyAction="http://tempuri.org/ILobbyManager/GuestLeftCallbackResponse")]
        void GuestLeftCallback();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyManager/GuestJoinedCallback", ReplyAction="http://tempuri.org/ILobbyManager/GuestJoinedCallbackResponse")]
        void GuestJoinedCallback(string guestName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILobbyManagerChannel : TripasDeGatoCliente.TripasDeGatoServicio.ILobbyManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LobbyManagerClient : System.ServiceModel.DuplexClientBase<TripasDeGatoCliente.TripasDeGatoServicio.ILobbyManager>, TripasDeGatoCliente.TripasDeGatoServicio.ILobbyManager {
        
        public LobbyManagerClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public LobbyManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public LobbyManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public LobbyManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public LobbyManagerClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void LeaveLobby(string code, int playerId) {
            base.Channel.LeaveLobby(code, playerId);
        }
        
        public System.Threading.Tasks.Task LeaveLobbyAsync(string code, int playerId) {
            return base.Channel.LeaveLobbyAsync(code, playerId);
        }
        
        public bool ConnectPlayerToLobby(string code, int playerId) {
            return base.Channel.ConnectPlayerToLobby(code, playerId);
        }
        
        public System.Threading.Tasks.Task<bool> ConnectPlayerToLobbyAsync(string code, int playerId) {
            return base.Channel.ConnectPlayerToLobbyAsync(code, playerId);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TripasDeGatoServicio.ILobbyBrowser")]
    public interface ILobbyBrowser {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyBrowser/GetAvailableLobbies", ReplyAction="http://tempuri.org/ILobbyBrowser/GetAvailableLobbiesResponse")]
        TripasDeGatoCliente.TripasDeGatoServicio.Lobby[] GetAvailableLobbies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyBrowser/GetAvailableLobbies", ReplyAction="http://tempuri.org/ILobbyBrowser/GetAvailableLobbiesResponse")]
        System.Threading.Tasks.Task<TripasDeGatoCliente.TripasDeGatoServicio.Lobby[]> GetAvailableLobbiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyBrowser/JoinLobby", ReplyAction="http://tempuri.org/ILobbyBrowser/JoinLobbyResponse")]
        bool JoinLobby(string code, TripasDeGatoCliente.TripasDeGatoServicio.Profile guest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyBrowser/JoinLobby", ReplyAction="http://tempuri.org/ILobbyBrowser/JoinLobbyResponse")]
        System.Threading.Tasks.Task<bool> JoinLobbyAsync(string code, TripasDeGatoCliente.TripasDeGatoServicio.Profile guest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyBrowser/CreateLobby", ReplyAction="http://tempuri.org/ILobbyBrowser/CreateLobbyResponse")]
        string CreateLobby(string gameName, int nodeCount, TripasDeGatoCliente.TripasDeGatoServicio.Profile owner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyBrowser/CreateLobby", ReplyAction="http://tempuri.org/ILobbyBrowser/CreateLobbyResponse")]
        System.Threading.Tasks.Task<string> CreateLobbyAsync(string gameName, int nodeCount, TripasDeGatoCliente.TripasDeGatoServicio.Profile owner);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyBrowser/GetLobbyByCode", ReplyAction="http://tempuri.org/ILobbyBrowser/GetLobbyByCodeResponse")]
        TripasDeGatoCliente.TripasDeGatoServicio.Lobby GetLobbyByCode(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyBrowser/GetLobbyByCode", ReplyAction="http://tempuri.org/ILobbyBrowser/GetLobbyByCodeResponse")]
        System.Threading.Tasks.Task<TripasDeGatoCliente.TripasDeGatoServicio.Lobby> GetLobbyByCodeAsync(string code);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILobbyBrowserChannel : TripasDeGatoCliente.TripasDeGatoServicio.ILobbyBrowser, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LobbyBrowserClient : System.ServiceModel.ClientBase<TripasDeGatoCliente.TripasDeGatoServicio.ILobbyBrowser>, TripasDeGatoCliente.TripasDeGatoServicio.ILobbyBrowser {
        
        public LobbyBrowserClient() {
        }
        
        public LobbyBrowserClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LobbyBrowserClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LobbyBrowserClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LobbyBrowserClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TripasDeGatoCliente.TripasDeGatoServicio.Lobby[] GetAvailableLobbies() {
            return base.Channel.GetAvailableLobbies();
        }
        
        public System.Threading.Tasks.Task<TripasDeGatoCliente.TripasDeGatoServicio.Lobby[]> GetAvailableLobbiesAsync() {
            return base.Channel.GetAvailableLobbiesAsync();
        }
        
        public bool JoinLobby(string code, TripasDeGatoCliente.TripasDeGatoServicio.Profile guest) {
            return base.Channel.JoinLobby(code, guest);
        }
        
        public System.Threading.Tasks.Task<bool> JoinLobbyAsync(string code, TripasDeGatoCliente.TripasDeGatoServicio.Profile guest) {
            return base.Channel.JoinLobbyAsync(code, guest);
        }
        
        public string CreateLobby(string gameName, int nodeCount, TripasDeGatoCliente.TripasDeGatoServicio.Profile owner) {
            return base.Channel.CreateLobby(gameName, nodeCount, owner);
        }
        
        public System.Threading.Tasks.Task<string> CreateLobbyAsync(string gameName, int nodeCount, TripasDeGatoCliente.TripasDeGatoServicio.Profile owner) {
            return base.Channel.CreateLobbyAsync(gameName, nodeCount, owner);
        }
        
        public TripasDeGatoCliente.TripasDeGatoServicio.Lobby GetLobbyByCode(string code) {
            return base.Channel.GetLobbyByCode(code);
        }
        
        public System.Threading.Tasks.Task<TripasDeGatoCliente.TripasDeGatoServicio.Lobby> GetLobbyByCodeAsync(string code) {
            return base.Channel.GetLobbyByCodeAsync(code);
        }
    }
}
