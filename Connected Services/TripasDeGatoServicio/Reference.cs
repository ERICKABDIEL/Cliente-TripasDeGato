//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TripasDeGatoCliente.TripasDeGatoServicio {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginUser", Namespace="http://schemas.datacontract.org/2004/07/TripasService.Logic")]
    [System.SerializableAttribute()]
    public partial class LoginUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdLoginUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdLoginUser {
            get {
                return this.IdLoginUserField;
            }
            set {
                if ((this.IdLoginUserField.Equals(value) != true)) {
                    this.IdLoginUserField = value;
                    this.RaisePropertyChanged("IdLoginUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mail {
            get {
                return this.MailField;
            }
            set {
                if ((object.ReferenceEquals(this.MailField, value) != true)) {
                    this.MailField = value;
                    this.RaisePropertyChanged("Mail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Profile", Namespace="http://schemas.datacontract.org/2004/07/TripasService.Logic")]
    [System.SerializableAttribute()]
    public partial class Profile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PicturePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TripasDeGatoCliente.TripasDeGatoServicio.GameEnumsPlayerStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdProfile {
            get {
                return this.IdProfileField;
            }
            set {
                if ((this.IdProfileField.Equals(value) != true)) {
                    this.IdProfileField = value;
                    this.RaisePropertyChanged("IdProfile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PicturePath {
            get {
                return this.PicturePathField;
            }
            set {
                if ((object.ReferenceEquals(this.PicturePathField, value) != true)) {
                    this.PicturePathField = value;
                    this.RaisePropertyChanged("PicturePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((this.ScoreField.Equals(value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TripasDeGatoCliente.TripasDeGatoServicio.GameEnumsPlayerStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameEnums.PlayerStatus", Namespace="http://schemas.datacontract.org/2004/07/TripasService.Utils")]
    public enum GameEnumsPlayerStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Offline = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Online = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProfileNotFoundFault", Namespace="http://schemas.datacontract.org/2004/07/TripasService.Contracts")]
    [System.SerializableAttribute()]
    public partial class ProfileNotFoundFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Message", Namespace="http://schemas.datacontract.org/2004/07/TripasService.Logic")]
    [System.SerializableAttribute()]
    public partial class Message : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChatMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChatMessage {
            get {
                return this.ChatMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ChatMessageField, value) != true)) {
                    this.ChatMessageField = value;
                    this.RaisePropertyChanged("ChatMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Lobby", Namespace="http://schemas.datacontract.org/2004/07/TripasService.Logic")]
    [System.SerializableAttribute()]
    public partial class Lobby : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GameNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NodeCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, TripasDeGatoCliente.TripasDeGatoServicio.Profile> PlayersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GameName {
            get {
                return this.GameNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GameNameField, value) != true)) {
                    this.GameNameField = value;
                    this.RaisePropertyChanged("GameName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NodeCount {
            get {
                return this.NodeCountField;
            }
            set {
                if ((this.NodeCountField.Equals(value) != true)) {
                    this.NodeCountField = value;
                    this.RaisePropertyChanged("NodeCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, TripasDeGatoCliente.TripasDeGatoServicio.Profile> Players {
            get {
                return this.PlayersField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayersField, value) != true)) {
                    this.PlayersField = value;
                    this.RaisePropertyChanged("Players");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Trace", Namespace="http://schemas.datacontract.org/2004/07/TripasService.Logic")]
    [System.SerializableAttribute()]
    public partial class Trace : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TripasDeGatoCliente.TripasDeGatoServicio.Node EndNodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TripasDeGatoCliente.TripasDeGatoServicio.Node StartNodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimestampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<TripasDeGatoCliente.TripasDeGatoServicio.TracePoint> TracePointsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Color {
            get {
                return this.ColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorField, value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TripasDeGatoCliente.TripasDeGatoServicio.Node EndNode {
            get {
                return this.EndNodeField;
            }
            set {
                if ((object.ReferenceEquals(this.EndNodeField, value) != true)) {
                    this.EndNodeField = value;
                    this.RaisePropertyChanged("EndNode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Player {
            get {
                return this.PlayerField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayerField, value) != true)) {
                    this.PlayerField = value;
                    this.RaisePropertyChanged("Player");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TripasDeGatoCliente.TripasDeGatoServicio.Node StartNode {
            get {
                return this.StartNodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StartNodeField, value) != true)) {
                    this.StartNodeField = value;
                    this.RaisePropertyChanged("StartNode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<TripasDeGatoCliente.TripasDeGatoServicio.TracePoint> TracePoints {
            get {
                return this.TracePointsField;
            }
            set {
                if ((object.ReferenceEquals(this.TracePointsField, value) != true)) {
                    this.TracePointsField = value;
                    this.RaisePropertyChanged("TracePoints");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Node", Namespace="http://schemas.datacontract.org/2004/07/TripasService.Logic")]
    [System.SerializableAttribute()]
    public partial class Node : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TripasDeGatoCliente.TripasDeGatoServicio.GameEnumsNodeStatus StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double XField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double YField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Color {
            get {
                return this.ColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorField, value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TripasDeGatoCliente.TripasDeGatoServicio.GameEnumsNodeStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double X {
            get {
                return this.XField;
            }
            set {
                if ((this.XField.Equals(value) != true)) {
                    this.XField = value;
                    this.RaisePropertyChanged("X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Y {
            get {
                return this.YField;
            }
            set {
                if ((this.YField.Equals(value) != true)) {
                    this.YField = value;
                    this.RaisePropertyChanged("Y");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TracePoint", Namespace="http://schemas.datacontract.org/2004/07/TripasService.Logic")]
    [System.SerializableAttribute()]
    public partial class TracePoint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double XField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double YField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double X {
            get {
                return this.XField;
            }
            set {
                if ((this.XField.Equals(value) != true)) {
                    this.XField = value;
                    this.RaisePropertyChanged("X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Y {
            get {
                return this.YField;
            }
            set {
                if ((this.YField.Equals(value) != true)) {
                    this.YField = value;
                    this.RaisePropertyChanged("Y");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameEnums.NodeStatus", Namespace="http://schemas.datacontract.org/2004/07/TripasService.Utils")]
    public enum GameEnumsNodeStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Free = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Occupied = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TripasDeGatoServicio.IUserManager")]
    public interface IUserManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/CreateAccount", ReplyAction="http://tempuri.org/IUserManager/CreateAccountResponse")]
        int CreateAccount(TripasDeGatoCliente.TripasDeGatoServicio.LoginUser newUser, TripasDeGatoCliente.TripasDeGatoServicio.Profile newProfile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/CreateAccount", ReplyAction="http://tempuri.org/IUserManager/CreateAccountResponse")]
        System.Threading.Tasks.Task<int> CreateAccountAsync(TripasDeGatoCliente.TripasDeGatoServicio.LoginUser newUser, TripasDeGatoCliente.TripasDeGatoServicio.Profile newProfile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/UpdateProfile", ReplyAction="http://tempuri.org/IUserManager/UpdateProfileResponse")]
        int UpdateProfile(int idProfile, string newUsername, string newPicPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/UpdateProfile", ReplyAction="http://tempuri.org/IUserManager/UpdateProfileResponse")]
        System.Threading.Tasks.Task<int> UpdateProfileAsync(int idProfile, string newUsername, string newPicPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/VerifyLogin", ReplyAction="http://tempuri.org/IUserManager/VerifyLoginResponse")]
        int VerifyLogin(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/VerifyLogin", ReplyAction="http://tempuri.org/IUserManager/VerifyLoginResponse")]
        System.Threading.Tasks.Task<int> VerifyLoginAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/GetProfileId", ReplyAction="http://tempuri.org/IUserManager/GetProfileIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TripasDeGatoCliente.TripasDeGatoServicio.ProfileNotFoundFault), Action="http://tempuri.org/IUserManager/GetProfileIdProfileNotFoundFaultFault", Name="ProfileNotFoundFault", Namespace="http://schemas.datacontract.org/2004/07/TripasService.Contracts")]
        int GetProfileId(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/GetProfileId", ReplyAction="http://tempuri.org/IUserManager/GetProfileIdResponse")]
        System.Threading.Tasks.Task<int> GetProfileIdAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/IsEmailRegistered", ReplyAction="http://tempuri.org/IUserManager/IsEmailRegisteredResponse")]
        int IsEmailRegistered(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/IsEmailRegistered", ReplyAction="http://tempuri.org/IUserManager/IsEmailRegisteredResponse")]
        System.Threading.Tasks.Task<int> IsEmailRegisteredAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/IsNameRegistered", ReplyAction="http://tempuri.org/IUserManager/IsNameRegisteredResponse")]
        int IsNameRegistered(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/IsNameRegistered", ReplyAction="http://tempuri.org/IUserManager/IsNameRegisteredResponse")]
        System.Threading.Tasks.Task<int> IsNameRegisteredAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/GetProfileByMail", ReplyAction="http://tempuri.org/IUserManager/GetProfileByMailResponse")]
        TripasDeGatoCliente.TripasDeGatoServicio.Profile GetProfileByMail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/GetProfileByMail", ReplyAction="http://tempuri.org/IUserManager/GetProfileByMailResponse")]
        System.Threading.Tasks.Task<TripasDeGatoCliente.TripasDeGatoServicio.Profile> GetProfileByMailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/GetPicPath", ReplyAction="http://tempuri.org/IUserManager/GetPicPathResponse")]
        string GetPicPath(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/GetPicPath", ReplyAction="http://tempuri.org/IUserManager/GetPicPathResponse")]
        System.Threading.Tasks.Task<string> GetPicPathAsync(string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserManagerChannel : TripasDeGatoCliente.TripasDeGatoServicio.IUserManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserManagerClient : System.ServiceModel.ClientBase<TripasDeGatoCliente.TripasDeGatoServicio.IUserManager>, TripasDeGatoCliente.TripasDeGatoServicio.IUserManager {
        
        public UserManagerClient() {
        }
        
        public UserManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int CreateAccount(TripasDeGatoCliente.TripasDeGatoServicio.LoginUser newUser, TripasDeGatoCliente.TripasDeGatoServicio.Profile newProfile) {
            return base.Channel.CreateAccount(newUser, newProfile);
        }
        
        public System.Threading.Tasks.Task<int> CreateAccountAsync(TripasDeGatoCliente.TripasDeGatoServicio.LoginUser newUser, TripasDeGatoCliente.TripasDeGatoServicio.Profile newProfile) {
            return base.Channel.CreateAccountAsync(newUser, newProfile);
        }
        
        public int UpdateProfile(int idProfile, string newUsername, string newPicPath) {
            return base.Channel.UpdateProfile(idProfile, newUsername, newPicPath);
        }
        
        public System.Threading.Tasks.Task<int> UpdateProfileAsync(int idProfile, string newUsername, string newPicPath) {
            return base.Channel.UpdateProfileAsync(idProfile, newUsername, newPicPath);
        }
        
        public int VerifyLogin(string email, string password) {
            return base.Channel.VerifyLogin(email, password);
        }
        
        public System.Threading.Tasks.Task<int> VerifyLoginAsync(string email, string password) {
            return base.Channel.VerifyLoginAsync(email, password);
        }
        
        public int GetProfileId(string username) {
            return base.Channel.GetProfileId(username);
        }
        
        public System.Threading.Tasks.Task<int> GetProfileIdAsync(string username) {
            return base.Channel.GetProfileIdAsync(username);
        }
        
        public int IsEmailRegistered(string email) {
            return base.Channel.IsEmailRegistered(email);
        }
        
        public System.Threading.Tasks.Task<int> IsEmailRegisteredAsync(string email) {
            return base.Channel.IsEmailRegisteredAsync(email);
        }
        
        public int IsNameRegistered(string username) {
            return base.Channel.IsNameRegistered(username);
        }
        
        public System.Threading.Tasks.Task<int> IsNameRegisteredAsync(string username) {
            return base.Channel.IsNameRegisteredAsync(username);
        }
        
        public TripasDeGatoCliente.TripasDeGatoServicio.Profile GetProfileByMail(string email) {
            return base.Channel.GetProfileByMail(email);
        }
        
        public System.Threading.Tasks.Task<TripasDeGatoCliente.TripasDeGatoServicio.Profile> GetProfileByMailAsync(string email) {
            return base.Channel.GetProfileByMailAsync(email);
        }
        
        public string GetPicPath(string username) {
            return base.Channel.GetPicPath(username);
        }
        
        public System.Threading.Tasks.Task<string> GetPicPathAsync(string username) {
            return base.Channel.GetPicPathAsync(username);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TripasDeGatoServicio.IFriendsManager")]
    public interface IFriendsManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsManager/AddFriend", ReplyAction="http://tempuri.org/IFriendsManager/AddFriendResponse")]
        int AddFriend(int idProfile1, int idProfile2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsManager/AddFriend", ReplyAction="http://tempuri.org/IFriendsManager/AddFriendResponse")]
        System.Threading.Tasks.Task<int> AddFriendAsync(int idProfile1, int idProfile2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsManager/DeleteFriend", ReplyAction="http://tempuri.org/IFriendsManager/DeleteFriendResponse")]
        int DeleteFriend(int idProfile1, int idProfile2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsManager/DeleteFriend", ReplyAction="http://tempuri.org/IFriendsManager/DeleteFriendResponse")]
        System.Threading.Tasks.Task<int> DeleteFriendAsync(int idProfile1, int idProfile2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsManager/GetFriends", ReplyAction="http://tempuri.org/IFriendsManager/GetFriendsResponse")]
        System.Collections.Generic.List<TripasDeGatoCliente.TripasDeGatoServicio.Profile> GetFriends(int idProfile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsManager/GetFriends", ReplyAction="http://tempuri.org/IFriendsManager/GetFriendsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<TripasDeGatoCliente.TripasDeGatoServicio.Profile>> GetFriendsAsync(int idProfile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsManager/IsFriendAlreadyAdded", ReplyAction="http://tempuri.org/IFriendsManager/IsFriendAlreadyAddedResponse")]
        int IsFriendAlreadyAdded(int idProfile1, int idProfile2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsManager/IsFriendAlreadyAdded", ReplyAction="http://tempuri.org/IFriendsManager/IsFriendAlreadyAddedResponse")]
        System.Threading.Tasks.Task<int> IsFriendAlreadyAddedAsync(int idProfile1, int idProfile2);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFriendsManagerChannel : TripasDeGatoCliente.TripasDeGatoServicio.IFriendsManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FriendsManagerClient : System.ServiceModel.ClientBase<TripasDeGatoCliente.TripasDeGatoServicio.IFriendsManager>, TripasDeGatoCliente.TripasDeGatoServicio.IFriendsManager {
        
        public FriendsManagerClient() {
        }
        
        public FriendsManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FriendsManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FriendsManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FriendsManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddFriend(int idProfile1, int idProfile2) {
            return base.Channel.AddFriend(idProfile1, idProfile2);
        }
        
        public System.Threading.Tasks.Task<int> AddFriendAsync(int idProfile1, int idProfile2) {
            return base.Channel.AddFriendAsync(idProfile1, idProfile2);
        }
        
        public int DeleteFriend(int idProfile1, int idProfile2) {
            return base.Channel.DeleteFriend(idProfile1, idProfile2);
        }
        
        public System.Threading.Tasks.Task<int> DeleteFriendAsync(int idProfile1, int idProfile2) {
            return base.Channel.DeleteFriendAsync(idProfile1, idProfile2);
        }
        
        public System.Collections.Generic.List<TripasDeGatoCliente.TripasDeGatoServicio.Profile> GetFriends(int idProfile) {
            return base.Channel.GetFriends(idProfile);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<TripasDeGatoCliente.TripasDeGatoServicio.Profile>> GetFriendsAsync(int idProfile) {
            return base.Channel.GetFriendsAsync(idProfile);
        }
        
        public int IsFriendAlreadyAdded(int idProfile1, int idProfile2) {
            return base.Channel.IsFriendAlreadyAdded(idProfile1, idProfile2);
        }
        
        public System.Threading.Tasks.Task<int> IsFriendAlreadyAddedAsync(int idProfile1, int idProfile2) {
            return base.Channel.IsFriendAlreadyAddedAsync(idProfile1, idProfile2);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TripasDeGatoServicio.IChatManager", CallbackContract=typeof(TripasDeGatoCliente.TripasDeGatoServicio.IChatManagerCallback))]
    public interface IChatManager {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManager/SendMessage")]
        void SendMessage(string username, TripasDeGatoCliente.TripasDeGatoServicio.Message message, string lobbyCode);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManager/SendMessage")]
        System.Threading.Tasks.Task SendMessageAsync(string username, TripasDeGatoCliente.TripasDeGatoServicio.Message message, string lobbyCode);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManager/ConnectToChat")]
        void ConnectToChat(string username, string lobbyCode);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManager/ConnectToChat")]
        System.Threading.Tasks.Task ConnectToChatAsync(string username, string lobbyCode);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManager/LeaveChat")]
        void LeaveChat(string username, string lobbyCode);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManager/LeaveChat")]
        System.Threading.Tasks.Task LeaveChatAsync(string username, string lobbyCode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatManagerCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatManager/BroadcastMessage", ReplyAction="http://tempuri.org/IChatManager/BroadcastMessageResponse")]
        void BroadcastMessage(TripasDeGatoCliente.TripasDeGatoServicio.Message message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatManagerChannel : TripasDeGatoCliente.TripasDeGatoServicio.IChatManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChatManagerClient : System.ServiceModel.DuplexClientBase<TripasDeGatoCliente.TripasDeGatoServicio.IChatManager>, TripasDeGatoCliente.TripasDeGatoServicio.IChatManager {
        
        public ChatManagerClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ChatManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ChatManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatManagerClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void SendMessage(string username, TripasDeGatoCliente.TripasDeGatoServicio.Message message, string lobbyCode) {
            base.Channel.SendMessage(username, message, lobbyCode);
        }
        
        public System.Threading.Tasks.Task SendMessageAsync(string username, TripasDeGatoCliente.TripasDeGatoServicio.Message message, string lobbyCode) {
            return base.Channel.SendMessageAsync(username, message, lobbyCode);
        }
        
        public void ConnectToChat(string username, string lobbyCode) {
            base.Channel.ConnectToChat(username, lobbyCode);
        }
        
        public System.Threading.Tasks.Task ConnectToChatAsync(string username, string lobbyCode) {
            return base.Channel.ConnectToChatAsync(username, lobbyCode);
        }
        
        public void LeaveChat(string username, string lobbyCode) {
            base.Channel.LeaveChat(username, lobbyCode);
        }
        
        public System.Threading.Tasks.Task LeaveChatAsync(string username, string lobbyCode) {
            return base.Channel.LeaveChatAsync(username, lobbyCode);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TripasDeGatoServicio.IPasswordRecoveryManager")]
    public interface IPasswordRecoveryManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPasswordRecoveryManager/SendRecoveryCode", ReplyAction="http://tempuri.org/IPasswordRecoveryManager/SendRecoveryCodeResponse")]
        int SendRecoveryCode(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPasswordRecoveryManager/SendRecoveryCode", ReplyAction="http://tempuri.org/IPasswordRecoveryManager/SendRecoveryCodeResponse")]
        System.Threading.Tasks.Task<int> SendRecoveryCodeAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPasswordRecoveryManager/VerifyRecoveryCode", ReplyAction="http://tempuri.org/IPasswordRecoveryManager/VerifyRecoveryCodeResponse")]
        bool VerifyRecoveryCode(string email, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPasswordRecoveryManager/VerifyRecoveryCode", ReplyAction="http://tempuri.org/IPasswordRecoveryManager/VerifyRecoveryCodeResponse")]
        System.Threading.Tasks.Task<bool> VerifyRecoveryCodeAsync(string email, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPasswordRecoveryManager/UpdatePassword", ReplyAction="http://tempuri.org/IPasswordRecoveryManager/UpdatePasswordResponse")]
        int UpdatePassword(string email, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPasswordRecoveryManager/UpdatePassword", ReplyAction="http://tempuri.org/IPasswordRecoveryManager/UpdatePasswordResponse")]
        System.Threading.Tasks.Task<int> UpdatePasswordAsync(string email, string newPassword);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPasswordRecoveryManagerChannel : TripasDeGatoCliente.TripasDeGatoServicio.IPasswordRecoveryManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PasswordRecoveryManagerClient : System.ServiceModel.ClientBase<TripasDeGatoCliente.TripasDeGatoServicio.IPasswordRecoveryManager>, TripasDeGatoCliente.TripasDeGatoServicio.IPasswordRecoveryManager {
        
        public PasswordRecoveryManagerClient() {
        }
        
        public PasswordRecoveryManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PasswordRecoveryManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PasswordRecoveryManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PasswordRecoveryManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int SendRecoveryCode(string email) {
            return base.Channel.SendRecoveryCode(email);
        }
        
        public System.Threading.Tasks.Task<int> SendRecoveryCodeAsync(string email) {
            return base.Channel.SendRecoveryCodeAsync(email);
        }
        
        public bool VerifyRecoveryCode(string email, string code) {
            return base.Channel.VerifyRecoveryCode(email, code);
        }
        
        public System.Threading.Tasks.Task<bool> VerifyRecoveryCodeAsync(string email, string code) {
            return base.Channel.VerifyRecoveryCodeAsync(email, code);
        }
        
        public int UpdatePassword(string email, string newPassword) {
            return base.Channel.UpdatePassword(email, newPassword);
        }
        
        public System.Threading.Tasks.Task<int> UpdatePasswordAsync(string email, string newPassword) {
            return base.Channel.UpdatePasswordAsync(email, newPassword);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TripasDeGatoServicio.IEmailVerificationManager")]
    public interface IEmailVerificationManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailVerificationManager/SendVerificationCodeRegister", ReplyAction="http://tempuri.org/IEmailVerificationManager/SendVerificationCodeRegisterResponse" +
            "")]
        int SendVerificationCodeRegister(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailVerificationManager/SendVerificationCodeRegister", ReplyAction="http://tempuri.org/IEmailVerificationManager/SendVerificationCodeRegisterResponse" +
            "")]
        System.Threading.Tasks.Task<int> SendVerificationCodeRegisterAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailVerificationManager/VerifyCode", ReplyAction="http://tempuri.org/IEmailVerificationManager/VerifyCodeResponse")]
        bool VerifyCode(string email, string verificationCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailVerificationManager/VerifyCode", ReplyAction="http://tempuri.org/IEmailVerificationManager/VerifyCodeResponse")]
        System.Threading.Tasks.Task<bool> VerifyCodeAsync(string email, string verificationCode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmailVerificationManagerChannel : TripasDeGatoCliente.TripasDeGatoServicio.IEmailVerificationManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmailVerificationManagerClient : System.ServiceModel.ClientBase<TripasDeGatoCliente.TripasDeGatoServicio.IEmailVerificationManager>, TripasDeGatoCliente.TripasDeGatoServicio.IEmailVerificationManager {
        
        public EmailVerificationManagerClient() {
        }
        
        public EmailVerificationManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmailVerificationManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmailVerificationManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmailVerificationManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int SendVerificationCodeRegister(string email) {
            return base.Channel.SendVerificationCodeRegister(email);
        }
        
        public System.Threading.Tasks.Task<int> SendVerificationCodeRegisterAsync(string email) {
            return base.Channel.SendVerificationCodeRegisterAsync(email);
        }
        
        public bool VerifyCode(string email, string verificationCode) {
            return base.Channel.VerifyCode(email, verificationCode);
        }
        
        public System.Threading.Tasks.Task<bool> VerifyCodeAsync(string email, string verificationCode) {
            return base.Channel.VerifyCodeAsync(email, verificationCode);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TripasDeGatoServicio.ILeaderboardManager")]
    public interface ILeaderboardManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeaderboardManager/GetHighestScores", ReplyAction="http://tempuri.org/ILeaderboardManager/GetHighestScoresResponse")]
        System.Collections.Generic.List<TripasDeGatoCliente.TripasDeGatoServicio.Profile> GetHighestScores();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeaderboardManager/GetHighestScores", ReplyAction="http://tempuri.org/ILeaderboardManager/GetHighestScoresResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<TripasDeGatoCliente.TripasDeGatoServicio.Profile>> GetHighestScoresAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILeaderboardManagerChannel : TripasDeGatoCliente.TripasDeGatoServicio.ILeaderboardManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LeaderboardManagerClient : System.ServiceModel.ClientBase<TripasDeGatoCliente.TripasDeGatoServicio.ILeaderboardManager>, TripasDeGatoCliente.TripasDeGatoServicio.ILeaderboardManager {
        
        public LeaderboardManagerClient() {
        }
        
        public LeaderboardManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LeaderboardManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LeaderboardManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LeaderboardManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<TripasDeGatoCliente.TripasDeGatoServicio.Profile> GetHighestScores() {
            return base.Channel.GetHighestScores();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<TripasDeGatoCliente.TripasDeGatoServicio.Profile>> GetHighestScoresAsync() {
            return base.Channel.GetHighestScoresAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TripasDeGatoServicio.IStatusManager")]
    public interface IStatusManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatusManager/SetPlayerStatus", ReplyAction="http://tempuri.org/IStatusManager/SetPlayerStatusResponse")]
        bool SetPlayerStatus(int idProfile, TripasDeGatoCliente.TripasDeGatoServicio.GameEnumsPlayerStatus status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatusManager/SetPlayerStatus", ReplyAction="http://tempuri.org/IStatusManager/SetPlayerStatusResponse")]
        System.Threading.Tasks.Task<bool> SetPlayerStatusAsync(int idProfile, TripasDeGatoCliente.TripasDeGatoServicio.GameEnumsPlayerStatus status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatusManager/GetPlayerStatus", ReplyAction="http://tempuri.org/IStatusManager/GetPlayerStatusResponse")]
        TripasDeGatoCliente.TripasDeGatoServicio.GameEnumsPlayerStatus GetPlayerStatus(int idProfile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatusManager/GetPlayerStatus", ReplyAction="http://tempuri.org/IStatusManager/GetPlayerStatusResponse")]
        System.Threading.Tasks.Task<TripasDeGatoCliente.TripasDeGatoServicio.GameEnumsPlayerStatus> GetPlayerStatusAsync(int idProfile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatusManager/DisconnectPlayer", ReplyAction="http://tempuri.org/IStatusManager/DisconnectPlayerResponse")]
        int DisconnectPlayer(int idProfile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatusManager/DisconnectPlayer", ReplyAction="http://tempuri.org/IStatusManager/DisconnectPlayerResponse")]
        System.Threading.Tasks.Task<int> DisconnectPlayerAsync(int idProfile);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStatusManagerChannel : TripasDeGatoCliente.TripasDeGatoServicio.IStatusManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StatusManagerClient : System.ServiceModel.ClientBase<TripasDeGatoCliente.TripasDeGatoServicio.IStatusManager>, TripasDeGatoCliente.TripasDeGatoServicio.IStatusManager {
        
        public StatusManagerClient() {
        }
        
        public StatusManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StatusManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StatusManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StatusManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool SetPlayerStatus(int idProfile, TripasDeGatoCliente.TripasDeGatoServicio.GameEnumsPlayerStatus status) {
            return base.Channel.SetPlayerStatus(idProfile, status);
        }
        
        public System.Threading.Tasks.Task<bool> SetPlayerStatusAsync(int idProfile, TripasDeGatoCliente.TripasDeGatoServicio.GameEnumsPlayerStatus status) {
            return base.Channel.SetPlayerStatusAsync(idProfile, status);
        }
        
        public TripasDeGatoCliente.TripasDeGatoServicio.GameEnumsPlayerStatus GetPlayerStatus(int idProfile) {
            return base.Channel.GetPlayerStatus(idProfile);
        }
        
        public System.Threading.Tasks.Task<TripasDeGatoCliente.TripasDeGatoServicio.GameEnumsPlayerStatus> GetPlayerStatusAsync(int idProfile) {
            return base.Channel.GetPlayerStatusAsync(idProfile);
        }
        
        public int DisconnectPlayer(int idProfile) {
            return base.Channel.DisconnectPlayer(idProfile);
        }
        
        public System.Threading.Tasks.Task<int> DisconnectPlayerAsync(int idProfile) {
            return base.Channel.DisconnectPlayerAsync(idProfile);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TripasDeGatoServicio.ILobbyManager", CallbackContract=typeof(TripasDeGatoCliente.TripasDeGatoServicio.ILobbyManagerCallback))]
    public interface ILobbyManager {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyManager/LeaveLobby")]
        void LeaveLobby(string code, string username);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyManager/LeaveLobby")]
        System.Threading.Tasks.Task LeaveLobbyAsync(string code, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyManager/ConnectPlayerToLobby", ReplyAction="http://tempuri.org/ILobbyManager/ConnectPlayerToLobbyResponse")]
        bool ConnectPlayerToLobby(string code, int playerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyManager/ConnectPlayerToLobby", ReplyAction="http://tempuri.org/ILobbyManager/ConnectPlayerToLobbyResponse")]
        System.Threading.Tasks.Task<bool> ConnectPlayerToLobbyAsync(string code, int playerId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyManager/StartMatch")]
        void StartMatch(string code);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyManager/StartMatch")]
        System.Threading.Tasks.Task StartMatchAsync(string code);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyManager/KickPlayer")]
        void KickPlayer(string code);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyManager/KickPlayer")]
        System.Threading.Tasks.Task KickPlayerAsync(string code);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILobbyManagerCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyManager/KickedFromLobby")]
        void KickedFromLobby();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyManager/HostLeftCallback")]
        void HostLeftCallback();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyManager/GuestLeftCallback")]
        void GuestLeftCallback();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyManager/GuestJoinedCallback")]
        void GuestJoinedCallback(string guestName, string picturePath, int idProfile);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyManager/GameStarted")]
        void GameStarted();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILobbyManagerChannel : TripasDeGatoCliente.TripasDeGatoServicio.ILobbyManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LobbyManagerClient : System.ServiceModel.DuplexClientBase<TripasDeGatoCliente.TripasDeGatoServicio.ILobbyManager>, TripasDeGatoCliente.TripasDeGatoServicio.ILobbyManager {
        
        public LobbyManagerClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public LobbyManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public LobbyManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public LobbyManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public LobbyManagerClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void LeaveLobby(string code, string username) {
            base.Channel.LeaveLobby(code, username);
        }
        
        public System.Threading.Tasks.Task LeaveLobbyAsync(string code, string username) {
            return base.Channel.LeaveLobbyAsync(code, username);
        }
        
        public bool ConnectPlayerToLobby(string code, int playerId) {
            return base.Channel.ConnectPlayerToLobby(code, playerId);
        }
        
        public System.Threading.Tasks.Task<bool> ConnectPlayerToLobbyAsync(string code, int playerId) {
            return base.Channel.ConnectPlayerToLobbyAsync(code, playerId);
        }
        
        public void StartMatch(string code) {
            base.Channel.StartMatch(code);
        }
        
        public System.Threading.Tasks.Task StartMatchAsync(string code) {
            return base.Channel.StartMatchAsync(code);
        }
        
        public void KickPlayer(string code) {
            base.Channel.KickPlayer(code);
        }
        
        public System.Threading.Tasks.Task KickPlayerAsync(string code) {
            return base.Channel.KickPlayerAsync(code);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TripasDeGatoServicio.ILobbyBrowser")]
    public interface ILobbyBrowser {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyBrowser/GetAvailableLobbies", ReplyAction="http://tempuri.org/ILobbyBrowser/GetAvailableLobbiesResponse")]
        System.Collections.Generic.List<TripasDeGatoCliente.TripasDeGatoServicio.Lobby> GetAvailableLobbies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyBrowser/GetAvailableLobbies", ReplyAction="http://tempuri.org/ILobbyBrowser/GetAvailableLobbiesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<TripasDeGatoCliente.TripasDeGatoServicio.Lobby>> GetAvailableLobbiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyBrowser/JoinLobby", ReplyAction="http://tempuri.org/ILobbyBrowser/JoinLobbyResponse")]
        bool JoinLobby(string code, TripasDeGatoCliente.TripasDeGatoServicio.Profile guest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyBrowser/JoinLobby", ReplyAction="http://tempuri.org/ILobbyBrowser/JoinLobbyResponse")]
        System.Threading.Tasks.Task<bool> JoinLobbyAsync(string code, TripasDeGatoCliente.TripasDeGatoServicio.Profile guest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyBrowser/CreateLobby", ReplyAction="http://tempuri.org/ILobbyBrowser/CreateLobbyResponse")]
        string CreateLobby(string gameName, int nodeCount, TripasDeGatoCliente.TripasDeGatoServicio.Profile host);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyBrowser/CreateLobby", ReplyAction="http://tempuri.org/ILobbyBrowser/CreateLobbyResponse")]
        System.Threading.Tasks.Task<string> CreateLobbyAsync(string gameName, int nodeCount, TripasDeGatoCliente.TripasDeGatoServicio.Profile host);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyBrowser/GetLobbyByCode", ReplyAction="http://tempuri.org/ILobbyBrowser/GetLobbyByCodeResponse")]
        TripasDeGatoCliente.TripasDeGatoServicio.Lobby GetLobbyByCode(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyBrowser/GetLobbyByCode", ReplyAction="http://tempuri.org/ILobbyBrowser/GetLobbyByCodeResponse")]
        System.Threading.Tasks.Task<TripasDeGatoCliente.TripasDeGatoServicio.Lobby> GetLobbyByCodeAsync(string code);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILobbyBrowserChannel : TripasDeGatoCliente.TripasDeGatoServicio.ILobbyBrowser, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LobbyBrowserClient : System.ServiceModel.ClientBase<TripasDeGatoCliente.TripasDeGatoServicio.ILobbyBrowser>, TripasDeGatoCliente.TripasDeGatoServicio.ILobbyBrowser {
        
        public LobbyBrowserClient() {
        }
        
        public LobbyBrowserClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LobbyBrowserClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LobbyBrowserClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LobbyBrowserClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<TripasDeGatoCliente.TripasDeGatoServicio.Lobby> GetAvailableLobbies() {
            return base.Channel.GetAvailableLobbies();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<TripasDeGatoCliente.TripasDeGatoServicio.Lobby>> GetAvailableLobbiesAsync() {
            return base.Channel.GetAvailableLobbiesAsync();
        }
        
        public bool JoinLobby(string code, TripasDeGatoCliente.TripasDeGatoServicio.Profile guest) {
            return base.Channel.JoinLobby(code, guest);
        }
        
        public System.Threading.Tasks.Task<bool> JoinLobbyAsync(string code, TripasDeGatoCliente.TripasDeGatoServicio.Profile guest) {
            return base.Channel.JoinLobbyAsync(code, guest);
        }
        
        public string CreateLobby(string gameName, int nodeCount, TripasDeGatoCliente.TripasDeGatoServicio.Profile host) {
            return base.Channel.CreateLobby(gameName, nodeCount, host);
        }
        
        public System.Threading.Tasks.Task<string> CreateLobbyAsync(string gameName, int nodeCount, TripasDeGatoCliente.TripasDeGatoServicio.Profile host) {
            return base.Channel.CreateLobbyAsync(gameName, nodeCount, host);
        }
        
        public TripasDeGatoCliente.TripasDeGatoServicio.Lobby GetLobbyByCode(string code) {
            return base.Channel.GetLobbyByCode(code);
        }
        
        public System.Threading.Tasks.Task<TripasDeGatoCliente.TripasDeGatoServicio.Lobby> GetLobbyByCodeAsync(string code) {
            return base.Channel.GetLobbyByCodeAsync(code);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TripasDeGatoServicio.IMatchManager", CallbackContract=typeof(TripasDeGatoCliente.TripasDeGatoServicio.IMatchManagerCallback))]
    public interface IMatchManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchManager/RegisterTrace", ReplyAction="http://tempuri.org/IMatchManager/RegisterTraceResponse")]
        bool RegisterTrace(string matchCode, TripasDeGatoCliente.TripasDeGatoServicio.Trace trace);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchManager/RegisterTrace", ReplyAction="http://tempuri.org/IMatchManager/RegisterTraceResponse")]
        System.Threading.Tasks.Task<bool> RegisterTraceAsync(string matchCode, TripasDeGatoCliente.TripasDeGatoServicio.Trace trace);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchManager/RegisterPlayerCallback", ReplyAction="http://tempuri.org/IMatchManager/RegisterPlayerCallbackResponse")]
        bool RegisterPlayerCallback(string matchCode, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchManager/RegisterPlayerCallback", ReplyAction="http://tempuri.org/IMatchManager/RegisterPlayerCallbackResponse")]
        System.Threading.Tasks.Task<bool> RegisterPlayerCallbackAsync(string matchCode, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchManager/GetNodes", ReplyAction="http://tempuri.org/IMatchManager/GetNodesResponse")]
        System.Collections.Generic.List<TripasDeGatoCliente.TripasDeGatoServicio.Node> GetNodes(string matchCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchManager/GetNodes", ReplyAction="http://tempuri.org/IMatchManager/GetNodesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<TripasDeGatoCliente.TripasDeGatoServicio.Node>> GetNodesAsync(string matchCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchManager/GetNodePairs", ReplyAction="http://tempuri.org/IMatchManager/GetNodePairsResponse")]
        System.Collections.Generic.Dictionary<string, string> GetNodePairs(string matchCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchManager/GetNodePairs", ReplyAction="http://tempuri.org/IMatchManager/GetNodePairsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetNodePairsAsync(string matchCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchManager/EndTurn", ReplyAction="http://tempuri.org/IMatchManager/EndTurnResponse")]
        bool EndTurn(string matchCode, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchManager/EndTurn", ReplyAction="http://tempuri.org/IMatchManager/EndTurnResponse")]
        System.Threading.Tasks.Task<bool> EndTurnAsync(string matchCode, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchManager/GetCurrentTurn", ReplyAction="http://tempuri.org/IMatchManager/GetCurrentTurnResponse")]
        string GetCurrentTurn(string matchCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchManager/GetCurrentTurn", ReplyAction="http://tempuri.org/IMatchManager/GetCurrentTurnResponse")]
        System.Threading.Tasks.Task<string> GetCurrentTurnAsync(string matchCode);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMatchManager/EndMatch")]
        void EndMatch(string matchCode);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMatchManager/EndMatch")]
        System.Threading.Tasks.Task EndMatchAsync(string matchCode);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMatchManager/LeaveMatch")]
        void LeaveMatch(string matchCode, string username);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMatchManager/LeaveMatch")]
        System.Threading.Tasks.Task LeaveMatchAsync(string matchCode, string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMatchManagerCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMatchManager/TraceReceived")]
        void TraceReceived(TripasDeGatoCliente.TripasDeGatoServicio.Trace trace);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMatchManager/NotifyYourTurn")]
        void NotifyYourTurn();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMatchManager/NotifyNotYourTurn")]
        void NotifyNotYourTurn();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMatchManager/NotifyYouLost")]
        void NotifyYouLost();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMatchManager/NotifyYouWon")]
        void NotifyYouWon();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMatchManager/NotifyDraw")]
        void NotifyDraw();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMatchManager/NotifyPlayerLeft")]
        void NotifyPlayerLeft();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMatchManagerChannel : TripasDeGatoCliente.TripasDeGatoServicio.IMatchManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MatchManagerClient : System.ServiceModel.DuplexClientBase<TripasDeGatoCliente.TripasDeGatoServicio.IMatchManager>, TripasDeGatoCliente.TripasDeGatoServicio.IMatchManager {
        
        public MatchManagerClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public MatchManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public MatchManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MatchManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MatchManagerClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public bool RegisterTrace(string matchCode, TripasDeGatoCliente.TripasDeGatoServicio.Trace trace) {
            return base.Channel.RegisterTrace(matchCode, trace);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterTraceAsync(string matchCode, TripasDeGatoCliente.TripasDeGatoServicio.Trace trace) {
            return base.Channel.RegisterTraceAsync(matchCode, trace);
        }
        
        public bool RegisterPlayerCallback(string matchCode, string username) {
            return base.Channel.RegisterPlayerCallback(matchCode, username);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterPlayerCallbackAsync(string matchCode, string username) {
            return base.Channel.RegisterPlayerCallbackAsync(matchCode, username);
        }
        
        public System.Collections.Generic.List<TripasDeGatoCliente.TripasDeGatoServicio.Node> GetNodes(string matchCode) {
            return base.Channel.GetNodes(matchCode);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<TripasDeGatoCliente.TripasDeGatoServicio.Node>> GetNodesAsync(string matchCode) {
            return base.Channel.GetNodesAsync(matchCode);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetNodePairs(string matchCode) {
            return base.Channel.GetNodePairs(matchCode);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetNodePairsAsync(string matchCode) {
            return base.Channel.GetNodePairsAsync(matchCode);
        }
        
        public bool EndTurn(string matchCode, string userName) {
            return base.Channel.EndTurn(matchCode, userName);
        }
        
        public System.Threading.Tasks.Task<bool> EndTurnAsync(string matchCode, string userName) {
            return base.Channel.EndTurnAsync(matchCode, userName);
        }
        
        public string GetCurrentTurn(string matchCode) {
            return base.Channel.GetCurrentTurn(matchCode);
        }
        
        public System.Threading.Tasks.Task<string> GetCurrentTurnAsync(string matchCode) {
            return base.Channel.GetCurrentTurnAsync(matchCode);
        }
        
        public void EndMatch(string matchCode) {
            base.Channel.EndMatch(matchCode);
        }
        
        public System.Threading.Tasks.Task EndMatchAsync(string matchCode) {
            return base.Channel.EndMatchAsync(matchCode);
        }
        
        public void LeaveMatch(string matchCode, string username) {
            base.Channel.LeaveMatch(matchCode, username);
        }
        
        public System.Threading.Tasks.Task LeaveMatchAsync(string matchCode, string username) {
            return base.Channel.LeaveMatchAsync(matchCode, username);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TripasDeGatoServicio.IEmailInvitationManager")]
    public interface IEmailInvitationManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailInvitationManager/SendInvitation", ReplyAction="http://tempuri.org/IEmailInvitationManager/SendInvitationResponse")]
        int SendInvitation(string username, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailInvitationManager/SendInvitation", ReplyAction="http://tempuri.org/IEmailInvitationManager/SendInvitationResponse")]
        System.Threading.Tasks.Task<int> SendInvitationAsync(string username, string code);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmailInvitationManagerChannel : TripasDeGatoCliente.TripasDeGatoServicio.IEmailInvitationManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmailInvitationManagerClient : System.ServiceModel.ClientBase<TripasDeGatoCliente.TripasDeGatoServicio.IEmailInvitationManager>, TripasDeGatoCliente.TripasDeGatoServicio.IEmailInvitationManager {
        
        public EmailInvitationManagerClient() {
        }
        
        public EmailInvitationManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmailInvitationManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmailInvitationManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmailInvitationManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int SendInvitation(string username, string code) {
            return base.Channel.SendInvitation(username, code);
        }
        
        public System.Threading.Tasks.Task<int> SendInvitationAsync(string username, string code) {
            return base.Channel.SendInvitationAsync(username, code);
        }
    }
}
